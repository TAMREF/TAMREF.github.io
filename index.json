[{"content":"Introduction An st-ordering (or bipolar odering) of a simple undirected graph is $G = (V, E)$ is a specific permutation $l$ of vertices, where any permutation $l$ induces a natural partial order on vertices $u \u0026lt; v \\iff l(u) \u0026lt; l(v) \\text{ and } uv \\in E$. $l$ is called to be an st-ordering if and only if for a given pair of vertices $(s, t)$, $s$ (resp. $t$) is the unique minimal (resp. maximal) element w.r.t $\u0026lt;$.\nHere, we discuss the existence condition of an st-ordering and the linear-time algorithm to find it if exists.\nExistence condition Theorem 1. $G$ has an $st$-ordering if and only if $G + st$ is 2-vertex connected.\nProof. We will constructively proof the existence with the provided condition, so we discuss the negative case. Assume contradictory \u0026ndash; $G$ has an $st$-ordering $l$ even if $G + st$ is not 2-vertex connected. Assume a cut vertex $v$ that separates another component $C$ from $\\set{s, t}$. Let $a, b \\in C$ be the vertices with the minimum / maximum label, respectively.\nAs both $a, b$ is neither $s$ nor $t$, both must have neighbors with smaller and larger label compared to itself, and one can easily show the impossibility. $\\square$\nLinear-time algorithm It is known that the $st$-ordering is a result that can be derived almost trivially from chain decomposition (Schmidt, 2013), a specific type of ear decomposition. However, we will delve into a more concrete algorithm. The correspondence with the algorithm provided by Schmidt13 is not entirely clear in my knowledge.\nI wrote the document in reference to this submission and following discussions of friends.\nSubroutine - Biconnected graph with prescribed source As a (nearly complete) subroutine, we will design an algorithm to establish an ordering $l$ for a 2-vertex connected graph $G$ with a given source $s$. This ordering will ensure that $s$ serves as the unique minimal element, and there exists a unique maximal element. For simplicity, we assume the presence of at least 2 distinct vertices.\nTo begin, we introduce the Depth-First Search (DFS) tree $T$ rooted at $s$. In this context, we define the \u0026ldquo;low-link\u0026rdquo; $\\mr{low}(v)$ for a vertex $v$ as the highest depth reachable from the subtree of $v$ by utilizing a single back-edge. It\u0026rsquo;s important to note that for any vertex $v \\neq s$, $\\mr{low}(v) \\le \\mr{depth}(p_{v})$, where $p_{v}$ represents the parent vertex of $v$. This property holds true due to the 2-vertex connectivity of $G$.\nWe will transform $T$ into a search tree and designate $l$ as the result of an in-order traversal of $T$. To achieve this, we must establish \u0026ldquo;directions\u0026rdquo; (left/right) for each subtree attached to every vertex. And then $l$ will naturally encode the subtree rooted on $v$ into $(\\text{Left subtrees from }v),v,(\\text{Right subtrees from }v)$. Relative orders between subtrees with the same direction doesn\u0026rsquo;t matter.\nFor $s$, we will put all the subtrees in right. This will ensure that $s$ is with the minimum label. For any $v \\neq s$, we\u0026rsquo;ll propagate the direction based on its ancestors'. For a vertex $v$ given the direction from $p_{v}$ and its child $w$ (i.e. $p_{w} = v$) If $\\mr{low}(w) \u0026lt; \\mr{depth}(v)$, direction of $w$ w.r.t $v$ is opposite of the direction of $v$ w.r.t. $\\mr{low}(w)$. Otherwise, $\\mr{low}(w) = \\mr{depth}(v)$ must hold. Actually this concludes that $v$ is the root, otherwise we can prove that $v$ is an articulation point. So we already know how to orient $w$. Note that $s$ will bear the only child vertex $c$. This child will be the maximal element, and the other vertices will be located between two. We prove that all vertices $v \\notin \\set{s, c}$ is neither minimal nor maximal w.r.t. the induced partial order.\nIf $\\mr{low}(v) \u0026lt; \\mr{low}(w)$ for any child $w$, it is in between its parent and its low-link \u0026ndash; the vertex who gives $\\mr{low}(v)$. If $\\mr{low}(v) = \\mr{low}(w)$ for some child $w$, $v$ is in between $w$ and $p_{v}$, we know that $\\mr{low}(v) \u0026lt; \\mr{depth}(p_{v})$. Thus $v$ should be oriented w.r.t $p_{v}$ just as $w$ is oriented w.r.t $v$. $\\square$ Completion Given the subroutine, we can complete the $st$-ordering by putting $st \\in E$ to be the only tree edge from $s$. $\\square$\nRelated problems CodeForces 1916 F. Group Division: we can take any $s, t$ and find $st$-ordering from the fact that $G$ is already biconnected. Taking first $n_{1}$ elements of $l$ will complete the separation.\nBOJ 31069. 순열 그래프 : Free to set $s$ and $t$, which is easily figurable.\nReferences Wikipedia contributors. \u0026ldquo;Bipolar orientation.\u0026rdquo; Wikipedia, The Free Encyclopedia. Wikipedia, The Free Encyclopedia, 18 Aug. 2023. Web. 1 Jan. 2024. Schmidt, Jens M. \u0026ldquo;A simple test on 2-vertex-and 2-edge-connectivity.\u0026rdquo; Information Processing Letters 113.7 (2013): 241-244. ","permalink":"https://tamref.github.io/posts/2024-01/st-ordering/","summary":"Introduction An st-ordering (or bipolar odering) of a simple undirected graph is $G = (V, E)$ is a specific permutation $l$ of vertices, where any permutation $l$ induces a natural partial order on vertices $u \u0026lt; v \\iff l(u) \u0026lt; l(v) \\text{ and } uv \\in E$. $l$ is called to be an st-ordering if and only if for a given pair of vertices $(s, t)$, $s$ (resp. $t$) is the unique minimal (resp.","title":"st-ordering"},{"content":"Intro Definition. Given $n$ items labeled by $[n]$, and item $i$ has value $v_{i}$ and cost $c_{i}$, we define minimum knapsack problem as following optimization problem - integer programming in fact. $$ \\begin{aligned} \\text{minimize}\\quad\u0026amp; \\sum_{i} c_{i}x_{i} \\\\ \\text{s.t.}\\quad\u0026amp; \\sum_{i} v_{i}x_{i} \\ge D \\\\ \u0026amp; x_{i} \\in \\set{0, 1} \\end{aligned} $$ where $D$ is given desire on value.\nWe can devise a naive LP relaxation for this: $$ \\begin{aligned} \\text{minimize}\\quad\u0026amp; \\sum_{i} c_{i}x_{i}\\\\ \\text{s.t.}\\quad\u0026amp; \\sum_{i} v_{i}x_{i} \\ge D\\\\ \u0026amp; x_{i} \\in [0, 1] \\end{aligned} $$ while this can be as bad as $D$ in terms of approximation ratio. Where $v_{1} = D-1, v_{2} = D$ and $c_{1} = 0, c_{2} = D$, LP optimum is $1$ where $x = (1, \\frac{1}{D})$ but the IP optimum is $D$ for $x = (0, 1)$.\nHowever, adopting additional LP constraints provides a significant improvement on performance. Assume that for a set $A \\subseteq [n]$, we added all items in $A$ for our collection. Then, it should be satisfied in the Integer Program. They are referred to knapsack covering inequalities. $$ \\sum_{i \\notin A} \\min(D - v(A), v_{i}) x_{i} \\ge D - v(A) $$ Where $v(A) := \\sum_{i \\in A} v_{i}$ is sum of the value of items in $A$. Now we can re-write the LP relaxation as below. $$ \\begin{aligned} \\text{minimize}\\quad\u0026amp; \\sum_{i} c_{i}x_{i} \\\\ \\text{s.t.}\\quad\u0026amp; \\sum_{i \\in [n] \\setminus A} v_{i}^{-A}x_{i} \\ge D - v(A) \u0026amp; \\forall A \\subseteq [n] \\\\ \u0026amp; x_{i} \\in [0, 1] \\end{aligned} $$ Where $v_{i}^{-A} := \\min(v_{i}, D - v(A))$. We will prove in two ways, that this LP gives 2-approximation of Minimum Knapsack Problem, and address the way dealing with exponentially many conditions.\nSimple Primal-Dual solution The simplest way is considering the dual program. $$ \\begin{aligned} \\text{maximize}\\quad\u0026amp; \\sum_{i} (D - v(A))y_{A}\\\\ \\text{s.t.}\\quad\u0026amp; \\sum_{i \\in [n] \\setminus A} v_{i}^{-A}y_{A} \\le c_{i} \u0026amp; \\forall i \\in [n]\\\\ \u0026amp; y_{A} \\ge 0 \\end{aligned} $$ Note that the Primal Complementary Slackness condition $$ x_{i} \u0026gt; 0 \\implies c_{i} = \\sum_{i \\in [n] \\setminus A} v_{i}^{-A}y_{A} $$ Will guide us to the derivation. We execute the dual algorithm as follows.\nSet $B := \\emptyset$. While $v(B) \u0026lt; D$: Increase $y_{B}$ until an inequality becomes tight. If an inequality for item $j$ became tight, add $j$ into $B$. Return $B$. The algorithm maintains a valid dual solution, since once $j$ is added into $B$ no dual variables in constraint for item $j$ grow up. It\u0026rsquo;ll terminate in $O(n^{2})$ time. Now, let\u0026rsquo;s verify the performance.\nApproximation ratio Note that we set the primal / dual pair to satisfy the complementary slackness condition. Now using the complementary slackness condition, we expand the cost term. $$ \\sum_{i \\in B} c_{i} x_{i} = \\sum_{i \\in B} x_{i} \\sum_{i \\in [n] \\setminus A} v_{i}^{-A} y_{A} = \\sum_{A \\subseteq B} y_{A} \\sum_{i \\in B \\setminus A} v_{i}^{-A} $$ Note that $y_{A} = 0$ for $A \\not\\subseteq B$ . Specifically, $y_{A}$ will be positive for only (proper) prefix set of $(a_{1}, \\cdots, a_{k})$, the trace of elements added into $A$. Fix a set $A$, and let $l$ be the latest element added to $B$. It will be always in $B \\subseteq A$. Since $v(B) - v_{l} \u0026lt; D$, We can say that $v(B) - v(A) - v_{l} \u0026lt; D - v(A)$ hence for all $t \\in B \\setminus A \\setminus l$, $v_{t} = v_{t}^{-A}$.\nCombining this, we obtain $\\sum_{i \\in B \\setminus A} v_{i}^{-A} = v_{l}^{-A} + \\sum_{i \\in B \\setminus A \\setminus l} v_{i} = (v(B) - v_{l} - v(A)) + v_{l}^{-A} \u0026lt; 2(D - v(A))$. Thus we can say that $$ \\sum_{i \\in B} c_{i} \\le 2 \\sum_{A \\subseteq B} y_{A} (D - v(A)) \\le 2 \\mathrm{OPT}. $$\nSolution from rounding Primal-dual is a constructive proof of 2-approximation. Via LP rounding, we will achieve stronger result.\nClaim. For any feasible solution $x$ of knapsack covering LP, there is a set of feasible integral solutions $x^{(1)}, \\cdots, x^{(t)}$, which accepts a convex combination dominated by $2x$. i.e. there is a non-negative coefficient $\\lambda^{(i)} \\ge 0$ such that $\\sum_{i = 1}^{t} \\lambda^{(i)}x^{(i)} \\le 2x$, and $\\sum_{i} \\lambda^{(i)} = 1$.\nThis is clearly a generalization of 2-approximation result if we set $x$ as the optimum of knapsack covering LP. But how do we solve this LP, having exponentially many constraints?\nThere are some known methods as ellipsoid methods provided by poly-time separation oracle, but it is not that easy to obtain such oracle as well. Here, we delve into the Claim and obtain the poly-time solution using the separation-oracle based on ellipsoid method.\nProof of claim We assume the coefficients are all integer, and $x$ is a rational vector. Suppose that for an integer $r \u0026gt; 0$, $rx$ is integral. We will set $r$ buckets on a circle, and assign items to each bucket. Assume $A := \\set{i : x_{i} \\ge 1/2}$. For items in $[n] \\setminus A$, we renumber the items to $1, \\cdots, k$ so that $v_{1} \\ge \\cdots \\ge v_{k}$. Starting from the item 1, we distribute $2rx_{i}$ copies of item $i$ to each bucket, going clockwise through the circle. Note that an item will never be put into the same bucket as $2rx_{i} \u0026lt; 2r \\cdot \\frac{1}{2} = r$. Now, we claim that each bucket generates a feasible integral solution combined with $A$. It suffices to see the last ($r$-th) bucket $K$ which will have the least value. If $\\sum_{i \\in K} v_{i}^{-A} \u0026lt; D - v(A)$, we will show that $\\sum_{i \\in F} v_{i}^{-A} \u0026lt; 2 (D - v(A))$ for the first bucket $F$. And then, it contradicts to the fact that average value of all the bucket is $ \\frac{1}{r}\\sum_{i = 1}^{k} (2rx_{i})v_{i}^{-A} = 2 \\sum_{i = 1}^{r} v_{i}^{-A}x_{i} \\ge 2(D - v(A)) $ from the knapsack feasibility of $x$.\nNote that $v_{i}^{-A} \\ge v_{j}^{-A}$ if $i \u0026lt; j$. So $\\sum_{i \\in F} v_{i}^{-A} - \\sum_{i \\in K} v_{i}^{-A}$ is sum of a non-increasing alternating sequence of which starting term is not greater than $D - v(A)$; thus also bounded by $D - v(A)$. $\\square$\nSome readers might\u0026rsquo;ve noticed that the \u0026ldquo;bucket distribution\u0026rdquo; involves only $k$ distinct budgets, so it\u0026rsquo;s able to construct such bucket in polynomial time.\nSolving an exponentially sized LP Actually, we\u0026rsquo;ll restrain from solving the entire LP to obtain the optimum of knapsack covering LP. From the proof of claim, we noticed that the solution $x$ suffices, if it satisfies knapsack-covering inequality for the set $ A_{x} := \\set{i\\in [n] : x_{i} \\ge 1/2}. $ provided the cost of $x$ is better than the optimal cost of knapsack covering LP. We\u0026rsquo;ll proceed the ellipsoid algorithm as follows:\nStart from a random solution $x$ and a large enough ellipsoid centered at $x$. If $x$ satisfies the knapsack covering inequality for $A_{x}$, cut the ellipsoid by the half-plane $\\set{y : c^{T}y \\le c^{T}x }$. If $x$ violates, we got the separation oracle. It\u0026rsquo;s provided that the algorithm terminates in the polynomial time, finding or failed to finding an optimal (basic) point $x_{0}$ satisfying knapsack covering inequality respect to $A_{x_0}$. We call a solution $x$ a self-covering solution if $x$ satisfies $A_{x}$ knapsack-covering inequality.\nIf the algorithm ended up failing to find any single self-covering solution, we conclude that the polytope is empty, since the ellipsoid must be shrunken enough. Otherwise, the last self-covering solution and the following violations guarantees that there is no feasible solution of full knapsack-covering LP with better cost compared to it. Either way, we proved that our algorithm gives the desired result. As a side note, set of self-covering solution is not necessarily convex, considering the form of constraint.\nReferences Williamson, David P., and David B. Shmoys. The design of approximation algorithms. Cambridge university press, 2011. For primal-dual approach. Carr, Robert D., et al. Strengthening integrality gaps for capacitated network design and covering problems. No. SAND99-1972C. Sandia National Lab.(SNL-NM), Albuquerque, NM (United States); Sandia National Lab.(SNL-CA), Livermore, CA (United States), 1999. For rounding approach. Grötschel, Martin, László Lovász, and Alexander Schrijver. Geometric algorithms and combinatorial optimization. Vol. 2. Springer Science \u0026amp; Business Media, 2012. ","permalink":"https://tamref.github.io/posts/min-knapsack-2-approx/","summary":"Intro Definition. Given $n$ items labeled by $[n]$, and item $i$ has value $v_{i}$ and cost $c_{i}$, we define minimum knapsack problem as following optimization problem - integer programming in fact. $$ \\begin{aligned} \\text{minimize}\\quad\u0026amp; \\sum_{i} c_{i}x_{i} \\\\ \\text{s.t.}\\quad\u0026amp; \\sum_{i} v_{i}x_{i} \\ge D \\\\ \u0026amp; x_{i} \\in \\set{0, 1} \\end{aligned} $$ where $D$ is given desire on value.\nWe can devise a naive LP relaxation for this: $$ \\begin{aligned} \\text{minimize}\\quad\u0026amp; \\sum_{i} c_{i}x_{i}\\\\ \\text{s.","title":"2-Approximating the Minimum Knapsack Problem"},{"content":"크기가 $n \\times n$인 실대칭행렬 $A = (a_{ij})$에 대해 $i \\neq j \\implies a_{ij} \\le 0$을 만족하고, $A$의 모든 고윳값이 음이 아닌 실수이다. (positive-semidefinite) $n \\ge 2$라고 할 때, 다음 물음에 답하여라.\n$\\ker A = \\set{v \\in \\mathbb{R}^{n} : v^{t}Av = 0}$ $[n] = \\set{1, \\cdots, n}$의 nonempty partition $I, J$에 대해, 항상 $a_{ij} \u0026lt; 0$인 $i \\in I$, $j \\in J$가 존재한다고 하자. 이 때, $\\dim \\ker A \\le 1$임을 보여라. 본 포스트에서는 이 문제의 풀이와, 이것이 함의하는 바에 대해 논의한다.\nProblem 1 $v \\in \\ker A$에서 $v^{t} A v = 0$임이 자명하므로, $v^{t}A v = 0 \\implies Av = 0$을 보이면 충분하다.\nReal symmetric matrix에 대한 spectral theorem으로부터, $\\lambda_{i} \\ge 0$과 $\\mathbb{R}^{n}$의 orthonormal basis $\\set{q_{1}, \\cdots, q_{n}}$에 대해 $A = \\sum_{i = 1}^{n} \\lambda_{i} q_{i}q_{i}^{t}$로 쓸 수 있다.\n이 때 $Av =\\sum_{i} \\lambda_{i} (q_{i}^{t}v) q_{i}$, 그리고 $v^{t}A v = \\sum_{i} \\lambda_{i} (q_{i}^{t} v)^{2}$ 으로 쓸 수 있다.\n$v^{t}Av = 0$이라면 $\\lambda_{i} \\ge 0$이므로 $\\lambda_{i} (q_{i}^{t}v)^{2} = 0$이 성립해야 하고, 따라서 $\\lambda_{i} (q_{i}^{t}v) = 0$이다. 따라서 $Av = 0 \\implies v \\in \\ker A$. $\\square$\nProblem 2 Starrysky와 함께 풀었다.\nProblem 1은 워낙 잘 알려진 사실이지만, 의외로 이 사실이 큰 힌트가 된다.\n$\\ker A = 0$인 경우에는 간단하니, $\\dim \\ker A \\ge 1$인 경우만 보인다.\nnull space의 nonzero vector $v \\in \\ker A$를 잡자. 이 때, $[n]$을 다음과 같이 분할한다.\n$I^{+} := \\set{i \\in [n] : v_{i} \u0026gt;0 }$ $I^{0} := \\set{i \\in [n] : v_{i} =0 }$ $I^{-} := \\set{i \\in [n] : v_{i} \u0026lt; 0 }$ $v^{+} := \\sum_{i \\in I^{+}} v_{i}\\mathbf{e}_{i}$, $v^{-} = \\sum_{i \\in I^{-}} (-v_{i})\\mathbf{e}_{i}$로 두면, $v = v^{+} - v^{-}$로 나타낼 수 있고 $v^{+}$와 $v^{-}$ 는 각 성분이 음이 아닌 실수이다.\nClaim 1. $v^{+}, v^{-} \\in \\ker A$.\nProof. $v^{t}Av = (v^{+} - v^{-})^{t} A (v^{+} - v^{-}) = 0$에서, $(v^{+})^{t}Av^{+} + (v^{-})^{t}Av^{-} - 2((v^{+})^{t}Av^{-}) = 0$을 얻는다. 앞 두 항은 당연히 nonnegative고, 맨 뒤 항은 풀어 쓰면 $(v^{+})^{t}Av^{-} = \\sum_{i \\in I^{+}} \\sum_{j \\in I^{-}} a_{ij}v_{i}(-v_{j}) \\ge 0$이다. 따라서 nonnegative real 3개의 합이 $0$이고 셋 다 $0$이어야 한다. 앞의 $1$에 의해 $v^{+}, v^{-} \\in \\ker A$. $\\square$\n위 식의 세 번째 항에 조금 더 집중해보자.\n일반성을 잃지 않고, $0 \u0026lt; \\left\\lvert I^{+} \\right\\rvert \u0026lt; n$이라고 두자. $i \\in I^{+}, j \\in I^{-}$에 대해 $a_{ij} = 0$이다. 문제에 주어진 조건에 $I = I^{+}$, $J = I^{0} \\cup I^{-}$를 대임해서 생각하면 $a_{ij} \u0026lt; 0$인 $i \\in I^{+}, j \\in I^{0}$가 하나 이상 존재한다. 이 위치를 $(p \\in I^{+}, q \\in I^{0})$라고 두자.\n$A$의 $i$번째 column vector를 $A^{i}$로 두면, $Av_{+} = 0$은 결국 $\\sum_{i \\in I^{+}} A^{i} v_{i} = 0$이라는 뜻이 된다. 이 때 $Av_{+}$의 $q$번째 항을 보면\n$(Av_{+})_{q} = \\sum_{i \\in I^{+}} a_{qi}v_{i} = 0$이다. $a_{qi} \\le 0, v_{i} \\ge 0$이므로 결국 $a_{qi}v_{i} = 0$을 얻는다. 여기에 $p$를 넣으면 $a_{qp}v_{p} \u0026lt; 0$이므로 모순이 발생한다!\nClaim 2. $v \\in \\ker A$이고 $v \\neq 0$이면, $v$의 모든 항은 nonzero이고 부호가 동일하다. $\\square$\n$0 \u0026lt; \\left\\lvert I^{-} \\right\\rvert \u0026lt; n$도 동일하게 모순이 발생함을 알 수 있으므로, 결국 $I^{+}, I^{-}$ 중 하나가 전체집합이어야 한다는 사실을 알 수 있다. 이제 $ I^{+} = n$이라고 두자. 아닌 경우는 $v$대신 $-v$를 쓰면 된다.\n$w \\in \\ker A$를 생각하자. 역시 $w$도 동일한 논증을 거쳐 모든 항이 양수인 벡터로 잡을 수 있다. 일반성을 잃지 않고 $v_{1} = w_{1} = 1$이 되게 scaling하자.\n만약 $v, w$가 linearly independent하다면 $v - w \\neq 0$이어야 한다. 일반성을 잃지 않고 $(v - w)_{k} \u0026gt; 0$이라고 두자. 그런데 $(v - w)_{1} = 0$이고, 똑같이 $v - w \\in \\ker A$이므로 Claim 2에 모순. 따라서 $\\dim \\ker A = 1$이다. $\\square$\nImplication 정점이 $n$개인 양수 가중치를 갖는 양방향 연결그래프 $G$를 생각하자. 이 때 $G$의 laplacian $L(G)$는 Problem 2의 조건을 만족하는 한 예시가 된다.\n$L(G)$는 모든 항이 $1$인 vector에 대해 $L(G)1 = 0$을 만족하고, $\\mathrm{rk} L(G) = n - 1$이 잘 알려져 있다. 즉, Problem 2는 “연결그래프의 laplacian의 rank는 $n - 1$이다”라는 사실을 일반화한 명제로 볼 수 있다.\n컴포넌트가 $c$개인 laplacian의 rank는 $n - c$로 알려져 있다. Problem 2의 증명을 아래와 같이 확장할 수 있을까?\n$[n]$의 nonempty partition $I_{1}, \\cdots, I_{c}$에 대해 어떤 $i \\in I_{u}, j \\in I_{v}$가 존재하여 $u \\neq v$, $a_{ij} \u0026lt; 0$이다. 이 때, $\\dim \\ker A \\le c$임을 보여라. ","permalink":"https://tamref.github.io/posts/migrated/generalized-laplacian/","summary":"크기가 $n \\times n$인 실대칭행렬 $A = (a_{ij})$에 대해 $i \\neq j \\implies a_{ij} \\le 0$을 만족하고, $A$의 모든 고윳값이 음이 아닌 실수이다. (positive-semidefinite) $n \\ge 2$라고 할 때, 다음 물음에 답하여라.\n$\\ker A = \\set{v \\in \\mathbb{R}^{n} : v^{t}Av = 0}$ $[n] = \\set{1, \\cdots, n}$의 nonempty partition $I, J$에 대해, 항상 $a_{ij} \u0026lt; 0$인 $i \\in I$, $j \\in J$가 존재한다고 하자. 이 때, $\\dim \\ker A \\le 1$임을 보여라.","title":"2021년 대수경 4번 풀이"},{"content":"Simplicial Complex에서 Alexander Duality는 다음과 같다. $ \\tilde{H_{i}}(A) \\simeq \\tilde{H}^{n-i-1}(S^{n} \\setminus A) $ 이 글에서는 그 Combinatorial Variant와 Björner \u0026amp; Tancer (2007)의 증명을 다룬다.\n모든 set은 finite set이라고 가정한다. 또한, Alexnader Duality의 응용 등에 대해서는 다루지 않는다.\n기본적으로 공부 도중에 기록을 위해 만든 post이기 때문에 내용이 추후 가감될 수 있다.\nAlexander Dual Vertex set $V$ 위에 정의된 Simplicial Complex $\\Delta$ 에 대해, Alexander Dual $\\Delta^{\\ast}$는 같은 Vertex Set 위에서 다음과 같이 정의된다. $ \\Delta^{\\ast} := \\set{\\sigma \\mid \\overline{\\sigma} \\notin \\Delta } $ 단, $\\overline{\\sigma}$는 $\\sigma$의 complement.\nDuality라는 이름이 붙은 만큼, 당연히 $\\Delta^{**} = \\Delta$가 성립한다. Matroid Duality와는 전혀 다른 대상인 듯하다.\n논문의 이미지를 빌린 설명이다. 이 경우 $S$의 Facet은 $\\set{12, 13, 23, 14}$이고, $S^{\\ast}$의 facet은 $\\set{12, 13}$이 된다.\nHomology Group Commutative Ring $R$에 대해, $\\Delta$의 (reduced) Chain Complex $\\tilde{C}_{\\ast}(\\Delta, R)$는 다음과 같은 free basis $\\tilde{B_{i}}$를 갖는 free $R$-module $\\tilde{C_{i}}$들의 chain으로 정의된다. $ \\tilde{B_{i}} := \\set{e_{\\sigma} \\mid \\sigma \\in \\Delta, \\dim \\sigma = i}, i \\ge -1 $ $\\dim \\emptyset = -1$임에 주목하자. $\\sigma = \\set{\\sigma_1, \\sigma_2, \\cdots, \\sigma_{k := \\dim \\sigma + 1}}$이라고 두었을 때 $e_{\\sigma} = \\mathbf{e}_{\\sigma_1} \\wedge \\cdots \\wedge \\mathbf{e}_{\\sigma_k}$ 처럼 생각해도 좋다.\nChain complex의 Boundary map $\\pd_{i}$는 다음을 만족하는 유일한 homomorphism으로 정의된다. $ \\pd_{i}(e_{\\sigma}) = \\sum_{j \\in \\sigma} (-1)^{\\idx_{\\sigma}(j) - 1}e_{\\sigma \\setminus j} $ 단, $\\idx_{\\sigma}(j)$는 $j$가 $\\sigma$의 몇 번째로 작은 원소인지 (1-based)를 의미한다. 정의로부터 $\\pd_{i-1}\\pd_{i} = 0$임을 알 수 있다. $i$에 대한 context가 명확할 때는 그냥 $\\pd$라고 쓴다.\n$i$-th Reduced Homology Group $\\tilde{H}_{i}(\\Delta) = \\ker \\pd_{i} / \\im \\pd_{i+1}$으로 정의된다. $\\Delta$가 Graph인 경우, (혹은 1차원으로 $\\Delta$를 restrict해서 보는 경우) $\\tilde{H}_{0}$는 $R^{\\beta_{0}-1}$ (단, $\\beta_{0}$는 그래프의 connected component 개수), $\\tilde{H_{1}}$의 free part의 rank는 $\\beta_{1}$ (Cycle dimension)과 같다.\nCohomology Group 각 $e_{\\sigma}$에 대해, Dual basis $e^{\\sigma}$를 생각하자. $\\tilde{B}^{i} := \\set{e^{\\sigma} \\mid \\sigma \\in \\Delta, \\dim \\sigma = i}$를 free basis로 갖는 free module $\\tilde{C}^{i}$로 이루어진 Cochain complex $\\tilde{C}^{\\ast}(\\Delta, R)$를 생각할 수 있다. 이 때 Coboundary operator $\\pd^{i}$를 다음과 같이 정의하자. $ \\pd^{i}(e^{\\sigma}) = \\sum_{j \\notin \\sigma} (-1)^{\\idx_{\\sigma + j}(j)} e^{\\sigma + j} $ $\\pd^{i}$는 $\\pd_{i}$의 Dual map이고 (즉, $C^{i-1} \\to C^{i}$), 이는 $\\left\u0026lt;e^{\\tau}, \\pd e_{\\sigma}\\right\u0026gt; = \\left\u0026lt;\\pd e^{\\tau}, e_{\\sigma}\\right\u0026gt;$를 검증하면 된다. 별다른 문제가 없으면 얘도 $\\pd$로 쓴다.\n$i$-th Reduced Cohomology Group $\\tilde{H}^{i}(\\Delta) = \\ker \\pd^{i+1} / \\im \\pd^{i}$로 정의된다.\n이제 Combinatorial Alexander Duality를 State할 수 있다:\nTheorem 1 (Combinatorial Alexander Duality) $ \\tilde{H}_{i}(\\Delta; R) \\simeq \\tilde{H}^{\\abs{V} - i - 3}(\\Delta^{\\ast}; R) $ $V$는 ground set, $R$은 chain complex가 정의된 commutative ring이다.\nCf. (Combinatorial Hodge Theory) $ \\tilde{H}_{i}(\\Delta; F) \\simeq \\tilde{H}^{i}(\\Delta; F) $ Hodge duality가 Field에 대해서만 성립하는 것과 대조된다.\nRelative Homology $\\Delta \\subseteq \\Gamma$인 두 simplicial complex $\\Gamma, \\Delta$를 생각하자. Quotient complex $\\Gamma / \\Delta$는 그냥 $\\Gamma \\setminus \\Delta$이다. 이 때 Relative Complex $C_{i}(\\Gamma, \\Delta) = C_{i}(\\Gamma) / C_{i}(\\Delta)$로 정의된다. Relative Boundary Operator $d_{i}$역시 자연스럽게 $ d_{i}([e_{\\sigma}]) = \\sum_{j \\in \\sigma, \\ \\sigma \\bs j \\notin \\Delta} (-1)^{\\idx_{\\sigma}(j) - 1} [{e_{\\sigma - j}]} $ 로 정의된다. (단, $[e_{\\sigma}]$는 $e_{\\sigma}$의 equivalence class)\n마찬가지로 $\\tilde{H_{n}}(\\Gamma, \\Delta; R) := \\ker d_{n} / \\im d_{n+1}$. 이 때 projection $\\pi : \\tilde{C}(\\Gamma) \\to \\tilde{C}(\\Gamma, \\Delta)$와 inclusion $\\iota : \\tilde{C}(\\Delta) \\to \\tilde{C}(\\Gamma)$로부터 자연스럽게 induce되는 map, 또 $\\pd$로부터 자연스럽게 induce되는 connecting homomorphism $\\pd^{\\ast}$에 의한 Long Exact Homology Sequence를 찾을 수 있다. $ \\cdots \\to \\tilde{H}_{i}(\\Gamma) \\to \\tilde{H}_{i}(\\Gamma, \\Delta) \\to \\tilde{H}_{i-1}(\\Delta) \\to \\tilde{H}_{i-1}(\\Gamma) \\to \\cdots $ 당연한 이야기지만, $\\Gamma \\bs \\Delta = \\Gamma’ \\bs \\Delta’$라면 둘의 relative homology는 동일하다. 이로부터, $\\Delta$의 cone $C\\Delta$에 대해 $\\tilde{H}(\\Gamma, \\Delta) \\simeq \\tilde{H}(\\Gamma \\cup C\\Delta)$임을 얻을 수 있다. ($\\Delta$에 해당하는 부분을 모두 “contract”한다고 생각하면 쉽다)\n이 LEHS는 증명에 필요한 다음 Lemma를 제공한다.\nLemma 2. $H_{i}(\\Delta) \\simeq H_{i+1}(2^{V}, \\Delta)$.\nProof. Long-exact sequence를 생각하면 $ \\cdots \\textcolor{red}{\\tilde{H}_{i}(2^{V})=0} \\to \\tilde{H}_{i}(2^{V}, \\Delta) \\to \\tilde{H}_{i-1}(\\Delta) \\to \\textcolor{red}{H_{i-1}(2^{V})=0} \\to \\cdots $ 증명 끝.\nIdea sketch 이제 $\\tilde{H}_{i+1}(2^{V}, \\Delta) \\simeq \\tilde{H}^{\\abs{V} - i - 3} (\\Delta^{\\ast})$를 보이면 된다. 적절한 isomorphism을 construct하는 게 목표.\n$\\sigma \\in 2^{V} / \\Delta \\implies \\overline{\\sigma} \\in \\Delta^{\\ast}$가 성립한다. 즉, homomorphism $e_{\\sigma} \\mapsto e^{\\overline{\\sigma}}$같은 mapping을 생각해서, 이게 Chain isomorphism이 된다는 걸 증명하면 둘의 homology도 같다는 사실을 증명할 수 있다. ($\\dim \\sigma + \\dim \\overline{\\sigma} = \\abs{V} - 2$임에 주목하면 차원이 맞는다)\n하지만 아쉽게도 이 mapping은 chain isomorphism이 아니고, 때문에 적당한 sign issue를 처리해주어야 한다.\n논문에서는 complex에 대응되는 Lattice를 잡고, 이를 “뒤집는다”는 발상을 통해 증명을 떠올렸다고 하는데, 그것이 얼마나 motivational한지는 모르겠다.\nProof $S(\\sigma)$를 적당히 $\\sum_{i \\in \\sigma} (i - 1)$로 정의하자. sign issue를 잡기 위해 사용할 양이다.\nProposition 3. $k \\in \\sigma$에 대해, $\\idx_{\\sigma}(k) + S(\\sigma \\bs k) \\equiv \\idx_{\\overline{\\sigma} + k}(k) + S(\\sigma) \\pmod{2}$.\n증명은 계산하면 나온다.\n결국 두 homology group이 isomorphic하다는 것을 확인하기 위해, Module isomorphism $\\phi_{j} : C_{j+1}(2^{V}, \\Delta) \\to C^{\\abs{V} - j - 3}(\\Delta)$를 다음과 같이 정의하자. $ \\phi_{j}(e_{\\sigma}) = (-1)^{S(\\sigma)} e^{\\overline{\\sigma}} $ 이제 $\\phi$가 $\\phi d = \\pd \\phi$를 만족한다는 것만 보이면 $\\phi$가 chain isomorphism이 되어 증명이 끝난다. $$ \\begin{aligned} \\pd \\phi(e_{\\sigma}) \u0026amp;= (-1)^{S(\\sigma)} \\sum_{j \\notin \\overline{\\sigma}, j + \\overline{\\sigma} \\in \\Delta^{\\ast}} (-1)^{\\idx_{\\overline{\\sigma} + j}(j)}e^{\\overline{\\sigma} + j}\\ \\phi d(e_{\\sigma}) \u0026amp;= \\phi(\\sum_{j \\in \\sigma, \\sigma - j \\notin \\Delta }(-1)^{\\idx_{\\sigma}(j)} e_{\\sigma - j})\\ \u0026amp;= \\sum_{j \\in \\sigma, \\overline{\\sigma} + j \\in \\Delta^{\\ast}} (-1)^{\\idx_{\\sigma}(j)}(-1)^{S(\\sigma - j)}e^{\\overline{\\sigma} + j} \\end{aligned} $$ 두 값은 Proposition 3에 의해 각 항이 같다. 증명 끝.\nConnection to Classic Alexander Duality Combinatorial Alexander Duality는 Alexander Duality의 특수한 경우로 볼 수 있다. 편의상 $\\Delta$가 정의된 $V = [n+2]$로 두고, $S^{n}$을 $\\pd 2^{[n+2]}$로 생각하자. 이 때 $\\norm{S^{n}} \\bs \\norm{\\Delta}$와 $\\norm{\\Delta^{\\ast}}$가 아무튼 homotopy equivalent하다는데, 이걸 이용하면\n$\\tilde{H_{i}}(\\Delta) \\simeq \\tilde{H}^{n-i-1}(S^{n} \\bs \\Delta)$임이 Alexander Duality에서, $\\tilde{H}^{n-i-1}(S^{n} \\bs \\Delta) = \\tilde{H}^{(n+2)-i-3}(\\Delta^{\\ast})$를 얻을 수 있다. Homotopy equivalence에 대한 증명은 나중에 알게 되면 추가하기로 한다..\n","permalink":"https://tamref.github.io/posts/migrated/alexander-duality/","summary":"Simplicial Complex에서 Alexander Duality는 다음과 같다. $ \\tilde{H_{i}}(A) \\simeq \\tilde{H}^{n-i-1}(S^{n} \\setminus A) $ 이 글에서는 그 Combinatorial Variant와 Björner \u0026amp; Tancer (2007)의 증명을 다룬다.\n모든 set은 finite set이라고 가정한다. 또한, Alexnader Duality의 응용 등에 대해서는 다루지 않는다.\n기본적으로 공부 도중에 기록을 위해 만든 post이기 때문에 내용이 추후 가감될 수 있다.\nAlexander Dual Vertex set $V$ 위에 정의된 Simplicial Complex $\\Delta$ 에 대해, Alexander Dual $\\Delta^{\\ast}$는 같은 Vertex Set 위에서 다음과 같이 정의된다.","title":"Alexander Duality"},{"content":"수직선상에 깃발 $N$개를 놓되, $i$번째 깃발은 $x_i$ 또는 $y_i$에 놓아야 한다. 이 때 깃발들 사이의 최소 거리의 최댓값을 구하는 문제이다. 문제 링크\nSolution sketch 일단 파라메트릭 + 2-SAT을 해야 한다는 것 까지는 자명한 관찰이다. 즉, “가장 가까이 있는 깃발이 $d$ 이상 떨어져 있게 할 수 있는가?”에 관한 문제를 풀자. 그런데 2-SAT에 사용할 그래프 에지를 단순하게 만들면 $O(N^2)$개가 된다.\nIdea 1. 2-SAT Segment Tree 편의상 $x$좌표들을 정렬된 순서대로 $p_{1}, p_{2}, \\cdots, $라 두자. 앞으로 특별한 말이 없으면 “$i$번째 위치…”와 같은 말은 모두 $p_{i}$로 해석하면 된다.\nSegment tree를 하나 빌드하는데, [s,e]의 노드는 \u0026ldquo;[s,e]번 위치에는 전부 깃발이 놓이지 않는다\u0026quot;라는 명제로 해석한다. [s,e] → [s,m] \u0026amp;\u0026amp; [s,e] → [m+1,e]만 간선을 통해 강제하면 이 트리의 노드들을 자유롭게 쓸 수 있다.\nIdea 2. Interval update $i$번째 위치에 깃발이 놓이는 상황을 생각하면, $(p_{i}-d, p_{i}+d)$에는 깃발이 놓일 수 없다. 따라서 해당 구간의 양 끝에 해당하는 인덱스 L, R을 lower/upper_bound로 결정해 주고, 세그트리에 update(L, i-1); update(i+1, R); 쿼리를 날려주자.\nupdate(A, B) 쿼리 내부는 세그트리의 구간 업데이트와 비슷하게 생겼다. 이미 세그트리를 만드는 과정에서 리프들까지 정보가 전달되므로, [s,e]가 [A, B]에 포함되면 [s,e]에 해당하는 노드에 간선을 잇고 빠져나오면 된다.\nAnalysis 세그트리는 \u0026ldquo;깃발이 없는\u0026rdquo; 쪽에만 만들면 충분하다. 여기서 노드가 $8N$개 정도 필요하다.\n\u0026ldquo;깃발이 있다\u0026quot;를 표현하는 노드가 $2N$개 정도. 따라서 2-SAT에 들어가는 노드 개수는 약 $10N$개이다.\n매번 간선이 $O(N\\log N)$개씩 나오니까, 파라메트릭까지 합치면 $O(N\\log N\\log X)$ 시간과 $O(N\\log N)$ 메모리로 문제를 해결할 수 있다.\n","permalink":"https://tamref.github.io/posts/migrated/arc069-f/","summary":"수직선상에 깃발 $N$개를 놓되, $i$번째 깃발은 $x_i$ 또는 $y_i$에 놓아야 한다. 이 때 깃발들 사이의 최소 거리의 최댓값을 구하는 문제이다. 문제 링크\nSolution sketch 일단 파라메트릭 + 2-SAT을 해야 한다는 것 까지는 자명한 관찰이다. 즉, “가장 가까이 있는 깃발이 $d$ 이상 떨어져 있게 할 수 있는가?”에 관한 문제를 풀자. 그런데 2-SAT에 사용할 그래프 에지를 단순하게 만들면 $O(N^2)$개가 된다.\nIdea 1. 2-SAT Segment Tree 편의상 $x$좌표들을 정렬된 순서대로 $p_{1}, p_{2}, \\cdots, $라 두자.","title":"ARC 069 F. Flags"},{"content":"Arzela-Ascoli theorem을 따로 알아야 할 상황이 생겨서, 해석개론에서 약간의 지름길을 타서 이 정리를 건드려보기로 했다.\nCompactness에 대한 통찰을 요구한다.\nRef: 김성기, 김도한, 계승혁 - 해석개론\n$N_{\\varepsilon}(x) := \\set{y \\mid \\norm{x - y} \u0026lt; \\varepsilon }$. 무엇의 부분집합인지는 context에 의존한다. Uniformly continuous function 함수 $f$가 정의역 $X$에서 uniformly continuous하다는 말은, given $\\varepsilon \u0026gt; 0$에 대해 $ \\exists \\delta ; \\forall x, y \\in X \\quad \\norm{x-y} \u0026lt; \\delta \\implies \\norm{f(x) - f(y)} \u0026lt; \\varepsilon $ 를 만족한다는 것을 말한다.\nHeine’s theorem.\nCompact set $X$에 대해 연속함수 $f : X \\to Y$는 uniformly continuous하다.\nProof. Given $\\varepsilon \u0026gt; 0$에 대해, $f$는 연속함수이므로 $\\forall y \\in X \\cap N_{\\delta (x)}(x)$ $\\norm{f(x) - f(y)} \u0026lt; \\varepsilon/2$을 만족하도록 각 $x$에 대해 양수 $\\delta(x) \u0026gt; 0$을 잡을 수 있다. 이 때, $\\set{N_{\\delta(x)/2}(x)}_{x \\in X}$는 $X$의 cover가 되고, $X$는 cpt set이므로 finite subcover가 존재한다. 이를 $\\set{N_{\\delta(x_i)/2}(x_i)}_{i=1,\\cdots,n}$ 이라고 두자. $\\delta := \\min_{i}\\set{\\frac{\\delta(x_i)}{2}}$가 조건을 만족함을 보이자.\n$\\norm{x-y} \u0026lt; \\delta$라고 하자. 이 때, $\\norm{x - x_{i}} \u0026lt; \\frac{\\delta(x_{i})}{2}$를 만족하는 $x_{i}$가 존재한다. 이 때 $\\norm{y - x_{i}} \\le \\norm{x - x_{i}} + \\norm{y - x} \u0026lt; \\delta + \\frac{\\delta(x_{i})}{2} \u0026lt; \\delta(x_{i}) $이므로 $x,y$는 모두 $N_{\\delta(x_{i})}(x_{i})$의 element이다. 따라서 $\\norm{f(x) - f(y)} \\le \\norm{f(x) - f(x_i)} + \\norm{f(y) - f(x_i)} \u0026lt; \\varepsilon$이 성립하고, 따라서 $f$는 uniformly continuous. $\\square$\nTheorem 1. $f : X \\to Y$가 고른연속이고 $\\ev{x_n}$이 $X$의 Cauchy 수열이면 $\\ev{f(x_n)}$ 또한 $Y$의 Cauchy 수열이다.\nProof. $f$가 uniformly continuous이므로 임의의 $\\varepsilon \u0026gt; 0$에 대해, $\\norm{x - y} \u0026lt; \\delta \\implies \\norm{f(x) - f(y)} \u0026lt; \\varepsilon$를 만족하는 양수 $\\delta \u0026gt; 0$이 존재한다. $\\ev{x_n}$은 Cauchy이므로 $m, n \\ge N \\implies \\norm{x_m - x_n} \u0026lt; \\delta$를 만족하는 자연수 $N$이 존재한다. 역시 $n, m \\ge N \\implies \\norm{f(x_m) - f(x_n)} \u0026lt; \\varepsilon$ 이 성립하므로 $\\ev{f(x_n)}$ 또한 Cauchy이다. $\\square$\nCorollary 2. $f : X \\to \\mb{R}^{n}$가 uniformly continuous라고 하면, $f$는 $\\overline{X}$까지 확장될 수 있다.\nProof. $z$가 $X$의 limit point라고 하자. 그렇다면 $z$로 수렴하는 $X$의 수열 $\\ev{x_n}$을 잡을 수 있다. 수렴하는 수열은 Cauchy 수열이므로 Theorem 1에 의해 $\\ev{f(x_n)}$ 또한 Cauchy 수열이고, $\\mb{R}^{n}$이 complete이므로 $\\ev{f(x_n)}$은 수렴한다. $\\lim_{n} f(x_n) = \\alpha$라고 할 때, $f(z) = \\alpha$가 well-defined임을 보이는 것은 어렵지 않다. $\\square$\nNote. $f := x \\mapsto \\frac{1}{x}$는 $(0,1)$에서 고른연속이 아니다; 실제로 $f$는 $x = 0$에 대해 확장될 수 없다.\nContinuous Function Space Compact set $X$에 대해 $X$에서 $\\mb{R}^{m}$으로 가는 연속함수의 집합 $C(X, \\mb{R}^{m})$ (줄여서 $C(X)$)은 자연스러운 vector space 구조를 갖는다. 함수 $f \\in C(X)$의 norm을 $\\norm{f}_{\\sup} := \\sup_{x\\in X} \\norm{f(x)}$으로 두면 Max-min theorem에 의해 $\\norm{f}_{\\sup} \u0026lt; \\infty$가 성립하고, $(C(X), \\norm{\\cdot}_{\\sup})$은 normed space (metric space)가 된다.\n$C(X)$의 ‘수열’은 연속함수열이 되고, $C(X)$에서 수열의 수렴성은 함수열의 uniform convergence로 대체된다.\nRemark. $C(X)$의 수열 $\\ev{f_n}$이 $f$로 수렴하면 $f \\in C(X)$이다. 즉, $C(X)$는 closed.\nTheorem 3. $C(X)$의 Cauchy sequence는 항상 수렴한다. 즉, $C(X)$는 complete metric space이다.\nProof. Given $\\varepsilon \u0026gt; 0$에 대해 $m, n \\ge N \\implies \\norm{f_m - f_n}_{\\sup} \u0026lt; \\varepsilon$을 만족하는 자연수 $N$이 존재한다고 하자. 따라서 모든 $x \\in X$에 대해 $m, n \\ge N \\implies \\norm{f_m (x) - f_n (x)} \u0026lt; \\varepsilon$을 만족한다. 따라서 $\\ev{f_{n}(x)}$는 $\\mb{R}^{m}$의 Cauchy 수열이고, $\\mb{R}^{m}$의 completeness에 의해 수렴값 $\\alpha_x$가 존재한다. 이 때 $f(x) := \\alpha_{x} = \\lim_{n} f_{n}(x)$로 두자. 이 때 $n \\ge N$에 대해 $\\lim_{m \\to \\infty} \\norm{f_m - f_n}_{\\sup} = \\norm{f - f_{n}}_{\\sup} \\le \\varepsilon$이므로 $\\ev{f_n}$은 $f$로 uniformly converge한다. $\\square$\nDefinition. 함수들의 모임 $\\mc{F}$에 대해, Given $\\varepsilon \u0026gt; 0$에 대해 $ \\forall f \\in \\mc{F}, \\forall x, y \\in X \\quad \\norm{x-y} \u0026lt; \\delta \\implies \\norm{f(x) - f(y)} \u0026lt; \\varepsilon $ 다음을 만족하는 $\\delta \u0026gt; 0$이 존재하면 $\\mc{F}$는 $X$에서 equicontinuous라고 한다.\nProposition 4. $X$가 cpt set이고 $C(X)$의 함수열 $\\ev{f_n}$이 $X$에서 uniformly converge하면 $\\set{f_n}$은 equicontinuous하다.\nProof. $\\ev{f_n}$이 $f$로 수렴한다고 하자. $\\ev{f_n}$은 수렴하므로 Cauchy이다. (이 사실의 증명은 짧지만 $\\mb{R}^{N}$ case와 등가는 아니다) 따라서 Given $\\varepsilon \u0026gt; 0$에 대해 $n \\ge N \\implies \\norm{f_n - f_N}_{\\sup} \u0026lt; \\varepsilon$가 성립하는 자연수 $N$이 존재한다. Heine’s thm에 의해 $f_N$은 uniformly continuous이므로 $\\forall x , y \\in X$ $\\norm{x - y} \u0026lt; \\delta \\implies \\norm{f_{N}(x) - f_{N}(y)} \u0026lt; \\varepsilon$을 만족하는 $\\delta \u0026gt; 0$이 존재한다. 따라서 모든 $n \\ge N$에 대해 $\\norm{x - y} \u0026lt; \\delta \\implies \\norm{f_n (x) - f_n(y)} \\le \\norm{f_n(x) - f_N (x)} + \\norm{f_N (x) - f_N (y)} + \\norm{f_N (y) - f_n (y)} \u0026lt; 3\\varepsilon$이 성립하고, 따라서 $\\set{f_{n}}_{n \\ge N}$은 $X$에서 equicontinuous이다. 이 때 singleton $\\set{f_i}$는 $X$에서 equicontinuous하고, 함수족 $\\mc{F}$와 $\\mc{G}$가 모두 $X$에서 equicontinuous하면 $\\mc{F} \\cup \\mc{G}$ 또한 equicontinuous하므로 $\\set{f_n}_{n \\ge 1}$ 또한 equicontinuous하다. $\\square$\nTheorem 5. Metric space에서 cptness와 sequential cptness는 동치이다.\nArzela - Ascoli Theorem. cpt set $X$에 대해, metric space $C(X)$의 부분집합 $\\mc{F}$가 (점별)유계이고 equicontinuous이면 $\\mc{F}$ 안의 임의의 함수열 $\\ev{f_n}$은 수렴하는 부분수열을 갖는다. 특별히 $\\mc{F}$가 closed이면, $\\mc{F}$는 sequentially compact하다; 따라서 $\\mc{F}$가 closed, (pointwise-)bounded, equicontinuous하면 $\\mc{F}$는 compact하다.\nProof. 자연수 $N$에 대해 $\\set{N_{1/n}(x) \\mid x \\in X}$는 $X$의 open cover가 되고, $X$가 compact니까 finite subcover가 존재한다. 이 subcover에서 open ball들의 중심만 모아놓은 유한집합을 $D_{n}$이라고 하자. $ D := \\bigcup_{i=1}^{\\infty} D_{i} $ 라 두면 $\\overline{D} \\subset X$는 $X$가 closed임에서, $X \\subset \\overline{D}$는 $D$의 정의로부터 얻을 수 있어서 $\\overline{D} = X$가 된다. $D$는 countable set이 되므로 $D := \\set{x_i}_{i \\ge 1}$으로 두자.\n이제 대각선 논법을 통해 $\\mc{F}$의 함수열 $\\ev{f_n}$의 수렴하는 부분수열을 찾는다. 실수열 $\\ev{f_n(x_1)}$은 유계이므로 Bolzano-Weierstrass theorem에 의해 수렴하는 부분수열이 존재하고, 이를 $\\ev{f_{1n}(x_1)}$으로 표기하자.\n똑같이 $\\ev{f_{1n} (x_2)}$를 생각하면 이 녀석도 수렴하는 부분수열을 갖는다. 이를 $\\ev{f_{2n}(x_2)}$라고 하자. 계속해서 $\\ev{f_{in}(x_{i+1})}$의 수렴하는 부분수열을 $\\ev{f_{i+1,n}(x_{i+1})}$로 정의하면 함수열 $\\ev{f_{in}(x_i)}$는 $x_1, \\cdots, x_i$에서 수렴하는 $\\ev{f_n}$의 부분수열이 되고, $\\ev{f_{i+1,n}}$은 $\\ev{f_{in}}$의 부분수열이 됨에 주목하자. $g_{k} := f_{kk}$로 두면 $\\ev{g_k}$는 $\\ev{f_n}$의 (중복 없는) 부분수열이 되고, 각 $x_i$에서 점별-수렴하는 함수열이다. 이제 $\\ev{g_n}$이 (균등-)수렴하는 수열임을 보이자.\n$\\mc{F}$가 동등연속이므로, Given $\\varepsilon \u0026gt; 0$에 대해 $\\forall f \\in \\mc{F}, \\forall x, y \\in X;; \\norm{x-y} \u0026lt; \\delta \\implies \\norm{f(x) - f(y)} \u0026lt; \\varepsilon $을 만족하는 양수 $\\delta \u0026gt; 0$을 잡을 수 있다. $\\overline{D} = X$이므로 $\\set{N_{\\delta}(x_{i})}_{i \\ge 1}$은 $X$의 open cover가 되고, finite subcover가 존재해서 자연수 $p$에 대해 $X \\subset N_{\\delta}(x_{i_1}) \\cup \\cdots \\cup N_{\\delta}(x_{i_p})$가 성립한다. 즉, 임의의 $x \\in X$에 대해 $\\norm{x - x_{i_j}} \u0026lt; \\delta$인 $j \\in \\set{1, \\cdots,p}$가 존재한다. 편의상 $x^{\\ast} := x_{i_j}$로 두자. 이 때 $\\ev{g_n}$은 $x^{\\ast}$에서 수렴하므로, 임의의 $u, v \\ge N$에 대해 $\\norm{g_u (x^{\\ast}) - g_v (x^{\\ast})} \u0026lt; \\varepsilon$을 만족하는 자연수 $N$이 존재한다. 따라서 $\\norm{g_u (x) - g_v (x)} \\le \\norm{g_u (x) - g_u (x^{\\ast})} + \\norm{g_u(x^{\\ast}) - g_v(x^{\\ast})} + \\norm{g_v (x^{\\ast}) - g_v (x)} \u0026lt; 3\\varepsilon$이 성립하고, $u, v \\ge N$에 대해 $\\norm{g_u - g_v}_{\\sup} \\le 3\\varepsilon$이 되므로 $\\ev{g_n}$은 Cauchy이고, 따라서 수렴한다. $\\square$\nExample 6.\n“Pulse” $f : \\mb{R} \\to \\mb{R}$를 다음과 같이 정의하자. $ f(x) = \\begin{cases} \\sin(\\pi x) \u0026amp; (x \\in [0,1]) \\ 0 \u0026amp; (\\text{otherwise}) \\end{cases} $ $f_{n}(x) = f(x + n)$으로 주어진 함수열 $\\ev{f_n}$은 (uniformly) bounded이고, equicontinuous하지만 convergent subsequence를 갖지 않는다. “진행하는 pulse”를 생각하면 꽤 직관적인 사실이다. 이는 $\\ev{f_n}$의 domain인 $\\mb{R}$이 compact하지 않기 때문으로, 정의역의 compactness가 Arzela-Ascoli theorem의 적용에 critical함을 보여주는 예시이다. 알려준 Starrysky에게 감사.\nProblem 7.\n이 예제도 Starrysky한테 받아왔다.\n$\\mc{F} \\subset C([0,1])$이 $(0,1)$에서 미분가능한 함수들 중에서 아래 조건을 만족하는 함수들의 집합으로 주어졌다고 하자. $ \\sup_{f \\in \\mc{F}}\\sup_{t \\in (0,1)} \\abs{f\u0026rsquo;(t)} \u0026lt; M_{1} \u0026lt; \\infty \\quad \\text{and} \\quad \\sup_{f \\in \\mc{F}} \\abs{f(0)} \u0026lt; M_{2} \u0026lt; \\infty. $ (단, $M_{1}, M_{2} \u0026gt; 0$) 이 때, $\\mc{F}$ 안의 임의의 함수열은 수렴하는 부분수열을 가짐을 보여라.\nProof. $\\mc{F}$가 bounded이고 equicontinuous임을 보이면 된다.\n$\\mc{F}$ is bounded. $t \\in [0,1]$에 대해 $\\sup_{f \\in \\mc{F}} \\abs{f(t)} \\le \\sup_{f \\in \\mc{F}}(\\abs{f(0)} + M_{1} \\cdot t) \\le M_{2} + M_{1} t \u0026lt; \\infty$이므로 $\\mc{F}$는 pointwise-bounded. $\\square$\n$\\mc{F}$ is equicontinuous. Given $\\varepsilon \u0026gt; 0$에 대해, 임의의 $x, y \\in [0,1]$에 대해서 $\\abs{x - y} \u0026lt; \\frac{\\varepsilon}{M_{1}}$이라면 임의의 $f \\in \\mc{F}$에 대해 $ \\abs{f(x) - f(y)} = \\abs{\\int_{x}^{y}f\u0026rsquo;(t)dt} \\le \\sup\\abs{f\u0026rsquo;(t)} \\cdot \\abs{y-x} \\le M_{1} \\abs{y-x} \u0026lt; \\varepsilon $ 이므로 $\\mc{F}$는 equicontinuous.$\\square$\n따라서 Arzela-Ascoli theorem에 의해 $\\mc{F}$의 임의의 함수열은 수렴하는 부분수열을 갖는다.\n","permalink":"https://tamref.github.io/posts/migrated/arzela-ascoli/","summary":"Arzela-Ascoli theorem을 따로 알아야 할 상황이 생겨서, 해석개론에서 약간의 지름길을 타서 이 정리를 건드려보기로 했다.\nCompactness에 대한 통찰을 요구한다.\nRef: 김성기, 김도한, 계승혁 - 해석개론\n$N_{\\varepsilon}(x) := \\set{y \\mid \\norm{x - y} \u0026lt; \\varepsilon }$. 무엇의 부분집합인지는 context에 의존한다. Uniformly continuous function 함수 $f$가 정의역 $X$에서 uniformly continuous하다는 말은, given $\\varepsilon \u0026gt; 0$에 대해 $ \\exists \\delta ; \\forall x, y \\in X \\quad \\norm{x-y} \u0026lt; \\delta \\implies \\norm{f(x) - f(y)} \u0026lt; \\varepsilon $ 를 만족한다는 것을 말한다.","title":"Arzela-Ascoli theorem"},{"content":"조합론에서의 Cayley\u0026rsquo;s theorem은 완전그래프 $K_{n}$의 서로 다른 spanning tree가 $n^{n-2}$개라는 정리이다. 일반적으로는 그 쓰임보다도 아름다운 증명에 가치를 둔다. Functional graph를 알고 있다는 전제 하에 글을 작성했다.\nReference : Miklos Bona - [A Walk through Combinatorics]\ncf : $[n] := \\set{1,\\dots,n}.$\nProof of the theorem (By A. Joyal) $K_{n}$의 spanning tree의 개수를 $t_{n}$이라고 두고, $n^{2}t_{n} = n^{n}$임을 보인다.\nDefinition. 정점 $n \\ge 1$개의 트리 $T$에서 정점 $a, b$를 골라 $a$를 start, $b$를 end로 부르자. ($a=b$를 허용한다)\n이렇게 얻어진 $n^{2}t_{n}$개의 object $(T,a,b)$들을 Doubly-rooted tree라고 부른다.\n이제 각각의 Doubly-rooted tree가 function $f : [n] \\to [n]$ 하나에 대응됨을 보이자. $f$의 개수는 $n^{n}$개임을 알고 있으니 one-to-one correspondence만 보이면 문제가 해결된다. 그리고 그게 안 쉽다 ㅋㅋㅋ\n$f$를 functional graph로 생각하면, $[n]$의 정점 중에서는 cycle에 속하는 원소들(${}^{\\exists} i \u0026gt; 0 \\ f^{i}(x) = x$)이 있고, cycle에 속하지 않는 정점들은 마치 tree(혹은 forest)와 같은 구조를 띠고 있음을 관찰할 수 있다. 따라서 doubly-rooted tree에 대응되는 function $f$를 construct하기 위해서 cycle part와 forest part를 나누어 만들어보자.\nDoubly-rooted tree $(T,a,b)$에서 $a$와 $b$를 잇는 path를 이용해서 cycle part를, path의 각 정점에 달린 subtree들을 이용해서 forest part를 만들어 줄 것이다.\nCycle part를 만드는 step은 약간 테크니컬하다. $a$와 $b$를 잇는 path를 $a = p_{1},\\dots,p_{k} = b$라고 두자. 이 때 $p_{1}, \\dots, p_{k}$를 번호 순으로 정렬하여 $q_{1} \u0026lt; \\cdots \u0026lt; q_{k}$가 되도록 한 뒤 $f$의 $\\set{q_{1},\\dots,q_{k}}$에 대한 restriction이 되는 permutation $\\sigma$를 $\\sigma(q_{i}) = p_{i}$와 같이 주면 cycle part가 path의 형태에 따라 유일하게 결정되는 것을 알 수 있다.\nForest part는 더 간단하다. $p_{1},\\dots,p_{k}$에 주렁주렁 달린 subtree를 Cycle에 그대로 달아주면 된다. 이러한 construction을 거꾸로 적용하면 임의의 functional graph에서 유일하게 doubly-rooted tree를 결정할 수 있음이 자명하다. 끝.\nApplications Corollary. (Bona, 10.9) 정점이 $n$개인 rooted forest(각 connected component에 root가 있는 forest)의 개수는 $(n+1)^{n-1}$개이다.\nProof. Rooted forest에 새로운 정점 $n+1$을 추가하고, 모든 root를 $n+1$에 이어붙여서 크기 $n+1$의 unrooted tree를 만드는 bijection을 생각하면 자명.\nExercise. (Bona. 10-(6)) 어떤 function $f$에 크기 2 이상의 cycle이 없다면 $f$를 acyclic function이라고 하자. $[n]$에서 $[n]$으로 가는 함수 중 acyclic function의 개수는 $(n+1)^{n-1}$개이다.\nProof. $f(x) = x$인 점들이 root가 되는 Rooted forest와의 bijection. 끝.\nPrufer Sequence 트리 $T$의 Prufer sequence (Prufer code)는 $T$를 완전히 결정하는 길이 $n-2$의 수열로, 다음 시행을 $n-2$번 수행하여 얻어진다;\n번호가 가장 작은 leaf를 제거하고, 그 유일한 이웃을 적는다\n이 때, 모든 $[n]^{n-2}$의 element는 어떤 tree의 Prufer sequence가 되고, Prufer sequence로부터 트리를 완전히 복원해낼 수 있음을 constructive하게 증명할 수 있다.\nProof. Prufer sequence에서 (각 수가 등장한 횟수) + 1 로 각 정점의 차수를 구할 수 있다. 이제 Prufer sequence에서 차수가 1인 정점 (leaf) 중 index가 가장 작은 정점 $i$를 찾고, 현재 Prufer sequence의 값 $j$와 $i$ 사이에 에지를 추가한 뒤 $j$의 차수를 1 감소시키는 과정을 반복하면 된다. 이 과정을 반복한 뒤에는 차수가 1인 정점이 두 개 남는데, 이 두 간선 사이에 에지를 이어주면 트리가 복원된다.\nParking function $1,\\dots,n$으로 표시되는 $n$개의 주차장과 $n$대의 차가 있다. $f : [n] \\to [n]$에 대해, 각 차는 $f(i)$번 이하의 주차장에는 주차를 하지 않으며, $1$번 차부터 시작하여 $i$번 차는 $f(i)$번 주차장이 비어 있다면 $f(i)$번, 그렇지 않다면 $f(i) + 1$번, \u0026hellip; 을 반복하여 빈 주차장이 나올 때까지 주차장을 찾는다. 이 때 모든 차가 주차에 성공할 수 있다면 $f$를 parking function이라고 한다.\nNumber of Parking functions $[n]$에 대한 Parking function의 개수는 $(n+1)^{n-1}$개.\nProof.\nBinomial theorem + Recursion으로 추하게 보일 수도 있지만, Pollak (1974)의 깔끔한 증명을 소개한다.\n\u0026lsquo;Virtual parking lot\u0026rsquo; $n+1$을 추가하고, 주차장을 원형으로 만들어서 $n+1$번 주차장에 주차를 하지 못하면 다시 $1$번부터 주차장을 순회할 수 있도록 문제를 바꾸자. 이 경우에는 function이 어떻게 주어져도 주차가 가능한데, 이 과정에서 occupy되지 않는 단 하나의 주차장을 제거하면 다시 parking function을 만들 수 있다. Cyclic shift 하에 $n+1$개의 multiplicity가 존재하니, 답은 $(n+1)^{n} / (n+1) = (n+1)^{n-1}$.\nProblem. Parking function과 Rooted forest 사이의 non-recursive bijection이 존재하는가?\nProof. 난 아직 모른다.\nFurther Reading http://www-math.mit.edu/~rstan/transparencies/parking.pdf\n","permalink":"https://tamref.github.io/posts/migrated/cayley-thm/","summary":"조합론에서의 Cayley\u0026rsquo;s theorem은 완전그래프 $K_{n}$의 서로 다른 spanning tree가 $n^{n-2}$개라는 정리이다. 일반적으로는 그 쓰임보다도 아름다운 증명에 가치를 둔다. Functional graph를 알고 있다는 전제 하에 글을 작성했다.\nReference : Miklos Bona - [A Walk through Combinatorics]\ncf : $[n] := \\set{1,\\dots,n}.$\nProof of the theorem (By A. Joyal) $K_{n}$의 spanning tree의 개수를 $t_{n}$이라고 두고, $n^{2}t_{n} = n^{n}$임을 보인다.\nDefinition. 정점 $n \\ge 1$개의 트리 $T$에서 정점 $a, b$를 골라 $a$를 start, $b$를 end로 부르자.","title":"Cayley Thm"},{"content":"Dol’nikov theorem이란 일반화된 Kneser graph의 chromatic number에 대한 정리이다. statement만 빌려 쓰면, 적절한 유한집합 $[n]$과 $F \\subseteq 2^{[n]}$에 대해 다음이 성립한다: $ \\chi(\\mar{KG}(F)) \\ge \\mar{cd}_{2}(F) $ 이 글에서는 Borsuk-Ulam theorem을 이용하여 이를 증명한다.\nProblem analysis Lovasz-Kneser theorem에서 다루었던 Kneser graph의 coloring 문제를 일반화해보자.\n적당한 ground set $[n]$이 있다. 이 $n$의 값은 오늘 전혀 중요하지 않다. $F \\subseteq 2^{[n]}$이 그래프의 정점 집합이 된다. 색은 이 정점 위에 칠할 것이다. $A, B \\in F$에 대해 $A \\cap B = \\emptyset$이면 $A, B$ 사이에 간선을 잇는다. 이렇게 정의된 graph가 Generalized Kneser Graph $\\mar{KG}(F)$이다.\n$\\mar{cd}_{2}$는 무엇을 의미할까? 일반적으로 $\\mar{cd}_{m}$은 $m$-colorability defect를 의미하는데, 칠하려는 그래프가 전혀 다르다. 정확히는 Hypergraph coloring을 해야 한다. 즉, $[n]$에서 크기 $k$인 집합 $S$를 제거하여, $[n] \\setminus S$에만 온전히 포함되는 $F$의 원소들의 집합 $F’$을 생각하자. 이 때 $[n] \\setminus S$를 $m$개의 색으로 잘 칠하여, $x \\in F’$가 monochromatic이 될 수 없다면 hypergraph $([n] \\setminus S, F\u0026rsquo;)$는 $m$-colorable이다. 이 때 $m$-colorability를 만족하기 위해 필요한 $\\sz{S}$의 최솟값 $k$가 바로 $\\mar{cd}_{m}(F)$이다.\nLink to Lovasz-Kneser 우리가 보이고자 하는 부등식이 Lovasz-Kneser를 일반화함을 보이자.\n$F = \\binom{[n]}{k}$이라고 두면 $\\mar{KG}(F)$가 이전 글에서 이야기한 $\\mar{KG}(n, k)$가 된다. 이 때 $\\mar{cd}_{2}(F) \\ge n - 2k + 2$임을 보이면 된다. 아무 $n - 2k + 1$개의 정점을 제거하면, 사실상 $F’ = \\binom{[2k-1]}{k}$가 된다. $[2k-1]$을 어떻게 두 색으로 칠하더라도 크기 $k$인 monochromatic 집합이 생기게 되므로, 무조건 $\\mar{cd}_{2}(F) \u0026gt; n - 2k + 1$임을 알 수 있다. 따라서 원하는 부등식을 보이면 Lovasz-Kneser를 증명할 수 있다.\nLusternik–Schnirelmann theorem L-S theorem은 Borsuk-Ulam theorem의 set covering analogy로 불린다. Borsuk-Ulam $\\iff$ Tucker $\\iff$ Lusternik–Schnirelmann 의 analogy가 유명한 모양. 여기서는 statement만 하고 끝내지만 증명이 어렵지 않다.\nTheorem (Lusternik–Schnirelmann). $n$차원 구 $S^{n}$이 open cover $U_{1}, \\cdots, U_{n+1}$을 가진다면, 이 중 antipodal point를 포함하는 $U_{i}$가 존재한다. (즉, $U_{i} \\cap -U_{i} \\neq \\emptyset$)\nTheorem’ (General L-S). $n$차원 구 $S^{n}$이 open or closed set $A_{1}, \\cdots, A_{n+1}$에 의해 cover된다고 하자. 역시 $A_{i} \\cap -A_{i} \\neq \\emptyset$인 $A_{i}$가 존재한다.\n이 또한 $S^{n}$의 compactness로부터 유도할 수 있다. Proof of the Theorem $d := \\chi(\\mar{KG}(F))$로 두고, $[n]$의 점들을 $S^{d}$ 위의 point들로 생각하자. 이 때, 충분히 general position을 취해서 대원 위에 $d+1$개 이상의 점이 없도록 할 수 있다. 이는 원래 $\\mab{R}^{d+1}$의 “general position”이 $d$차원의 hyperplane 위에 $d+1$개 이상의 점이 올라가지 않는 position임을 생각하면 자연스럽고, 또 무리 없이 만들어줄 수 있다.\n이 때, 임의의 point $x \\in S^{d}$에 대해 open hemisphere $H(x) := \\set{y \\in S^{d} \\mid \\ip{x}{y} \u0026gt; 0}$을 정의하자. 이 때 $H(x)$가 color $i$로 칠해진 $f \\in F$를 포함하면 $x \\in A_{i}$가 되도록 $A_{i}$를 정의하자. 자연스럽게 $1 \\le i \\le d$에 대해 $A_{i}$는 open이고, $A_{d+1} = S^{d} \\setminus (A_{1} \\cup \\cdots \\cup A_{d})$는 closed가 된다.\nGeneral L-S theorem에 의해 antipodal point를 포함하는 $A_{i}$가 존재한다. $1 \\le i \\le d$라면 $H(x)$와 $H(-x)$는 겹치지 않는 와중에 color $i$로 칠해진 집합 $f, g$를 포함하고, 이는 coloring 조건에 모순. 따라서 $i = d + 1$이어야 한다.\n이제 $x, -x \\in A_{d+1}$에 대해 $H(x)$의 점을 붉은색, $H(-x)$의 점을 푸른색으로 칠하고, $S^{d} \\setminus H(x) \\setminus H(-x)$ (대원) 위에 있는 점들을 제거하자. 제거되는 점은 최대 $d$개이고, $1 \\le i \\le d$에 대해 $x, -x \\notin A_{i}$이기 때문에 어떤 $F$의 원소도 monochrmoatic일 수 없다.\n증명 끝.\n","permalink":"https://tamref.github.io/posts/migrated/dolnikov/","summary":"Dol’nikov theorem이란 일반화된 Kneser graph의 chromatic number에 대한 정리이다. statement만 빌려 쓰면, 적절한 유한집합 $[n]$과 $F \\subseteq 2^{[n]}$에 대해 다음이 성립한다: $ \\chi(\\mar{KG}(F)) \\ge \\mar{cd}_{2}(F) $ 이 글에서는 Borsuk-Ulam theorem을 이용하여 이를 증명한다.\nProblem analysis Lovasz-Kneser theorem에서 다루었던 Kneser graph의 coloring 문제를 일반화해보자.\n적당한 ground set $[n]$이 있다. 이 $n$의 값은 오늘 전혀 중요하지 않다. $F \\subseteq 2^{[n]}$이 그래프의 정점 집합이 된다. 색은 이 정점 위에 칠할 것이다. $A, B \\in F$에 대해 $A \\cap B = \\emptyset$이면 $A, B$ 사이에 간선을 잇는다.","title":"Dolnikov Theorem"},{"content":"Grundy Number는 PS에서 굉장히 자주 쓰이는 데 비해 그 증명이나 수학적 배경이 잘 알려져 있지 않다. 앞으로 일련의 포스팅에서는 Sprague-Grundy Theorem에 대해 공부한 것을 PS 스타일로 정리하려 한다. 그 중에서 이 글은 Grundy Number의 정의와 Sprague-Grundy theorem의 증명에 대해 다룬다.\nNim-Game의 필승 전략에 대한 사전 지식이 필요하며, 문제풀이에 최적화된 글이기 때문에 statement가 실제 theorem의 내용과는 다소 차이가 있다.\nReferences sirkingnightingfail, “A Blog on Sprague-Grundy Theorem”\nWikipedia: Sprague-Grundy theorem\nDefinition of Game “게임”은 상당히 광범위한 용어이지만, Sprague-Grundy theorem의 영향 아래 있는 “Game”은 다음의 조건을 만족하는 일종의 state collection을 말한다.\n게임은 player A, B 2명이 즐기는 two-player game이다. 동일한 상황에서 두 player가 취할 수 있는 행동의 집합 (다시말해, 도달할 수 있는 ‘다음 상태’의 집합) (move set)은 같다. (Impartial Game) 각 player는 해당 상황에서 취할 수 있는 모든 행동을 알고 있다. (Perfect Information) 더 이상 행동을 취할 수 없는 사람이 진다. (Normal Play Convention) 어떤 행동을 하더라도 유한한 move 안에 게임의 승패가 결정된다. (Ending Condition) Game의 notation으로는 각 상태의 move set을 재귀적으로 나타내는 것이 일반적이다. 가장 먼저 아무 행동도 취할 수 없는 상태를 $\\emptyset$으로 나타내고, $\\emptyset$으로만 갈 수 있는 상태 $A$가 있다면 $A = \\set{\\emptyset}$, $B = \\set{A,\\emptyset} \\cdots$ 과 같이 나타내는 형식이다. 상태 $S$에 대해, $S$를 받은 선수가 어떤 행동을 취해도 패배한다면 $S$를 losing position, 그렇지 않다면 $S$를 winning position이라고 한다.\nNim Game의 예시를 보자.\nSet notation of Nim Game (Nimber) Nim Game의 정의를 복기하자.\n$n$개의 pile에 각각 $a_{1},\\cdots,a_{n}$개의 돌이 쌓여 있다. Player A, B는 pile을 하나 골라 $1$개 이상의 돌을 제거할 수 있다. (Impartial, Perfect-information) 더 이상 돌을 제거할 수 없는 사람이 패배한다. (Ending Condition \u0026amp; Normal play convention) 우선 pile이 1개라고 하자. 이 게임의 승패 판별은 자명하지만 그것은 별로 중요하지 않다. 이 게임을 결정하는 유일한 변수는 pile에 남아있는 돌의 개수가 된다. pile이 비어있는 경우 move set은 $\\ast 0 = \\emptyset$이 되고, 돌이 $k \\ge 1$개 남아있는 경우 move set은 $\\ast k = \\set{\\ast 0, \\ast 1, \\cdots, \\ast (k-1)} = \\ast(k-1) \\cup \\set{\\ast(k-1)}$이 된다. 마치 자연수가 정의되는 원리와 비슷하여 Nimber라고도 부른다.\npile이 1개인 경우의 move set에서 pile이 $n$개인 경우로 확장하는 방법은 아래와 같다. $ \\ast(a_{1},a_{2},\\cdots,a_{n}) = \\bigcup_{i=1}^{n} \\left\\set{\\ast(a_{1},\\cdots,a_{i-1},x,a_{i+1},\\cdots,a_{n}) \\ \\vert \\ x \\in \\ast a_{i} \\right} $\nGrundy Number Mex function $\\mex$는 nonnegative integer $\\nonneg$의 finite subset에 대해 정의되는 함수로, $\\mex(S) = \\min_{x \\notin S} x$로 정의된다. $\\mex(\\emptyset) = 0$, $\\mex\\set{1,3,4} = 0$, $\\mex\\set{0,1,2,3,5}=4$이다. 이제 $\\mex$를 이용하여 Grundy number를 정의한다.\n게임의 상태 $S$에 대해, $S$의 grundy number $G(S)$의 정의는 다음과 같다. $ G(S) = \\mex_{s \\in S} \\ G(s) $ 즉, $S$에서 이동할 수 있는 state들의 Grundy number를 모은 집합의 mex가 $S$의 grundy number가 된다. $G(\\emptyset) = 0$이 자연스럽게 정의됨을 확인하자. 다른 예로, 두 pile에 각각 $2,3$개의 돌이 놓여있는 nim game의 grundy number는 $G(\\ast(2,3)) = \\mex \\left\\set{ G(\\ast(0,3)), G(\\ast(1,3)), G(\\ast(2,0)),G(\\ast(2,1)), G(\\ast(2,2)) \\right}$로 계산된다.\nTheorem 1. $S$가 losing position인 것은 $G(S) = 0$과 동치이다.\nProof. $S$는 유한 턴 안에 끝나는 게임이므로, $S$에서 게임이 끝나기 위해 걸리는 턴 수의 최댓값 $\\mathcal{T}(S)$가 잘 정의된다. $\\mathcal{T}(S)$에 대한 strong induction으로 증명하자.\n$\\mathcal{T}(S) = 0$은 $S = \\emptyset$과 동치이다. $G(\\emptyset) = 0$이고 $\\emptyset$은 당연히 losing position. $\\mathcal{T}(S) \u0026gt; 0$일 때, $s \\in S$에 대해 당연히 $\\mathcal{T}(s) \u0026lt; \\mathcal{T}(S)$이므로 귀납가정을 쓸 수 있다. 이 때 losing position $l \\in S$가 존재한다면 귀납가정에 의해 $G(l) = 0$이고, 자연히 $G(S) \\neq 0$이다. 한편 $l$이 losing position이라면 선수가 $l$로 이동하면 되기 때문에 $S$는 winning position이 된다. $S$의 원소 중 losing position이 존재하지 않는다면 모든 $s \\in S$에 대해 $G(s) \u0026gt; 0$이므로 $G(S) = 0$이다. 한편 $S$가 losing position이 됨은 자명. $\\blacksquare$ Nim-Game의 예시가 빠질 수 없다.\nGrundy number of Nimbers Proposition 2. $G(\\ast k) = k$.\n$k$에 대한 strong induction으로 쉽게 증명할 수 있고, Theorem 1과 우리의 ‘상식적인 결과’가 잘 맞아떨어진다는 것을 확인할 수 있다. 다만 이것으로는 부족하다는 것을 잘 알고 있을 것이다.\nQuestion 3. $G(\\ast(a_{1},a_{2},\\cdots,a_{n})) = ?$\nClassical nim game에 대해, 선수의 승리 조건이 $a_{1} \\oplus \\cdots \\oplus a_{n} \\neq 0$임을 알고 있을 것이다. ($\\oplus$는 bitwise-XOR) 마찬가지로 $G(\\ast(a_{1},a_{2},\\cdots,a_{n})) = a_{1} \\oplus \\cdots \\oplus a_{n}$이 된다. 하지만 왜?\nCombining Games 앞서, pile이 여러 개인 경우 Nim-game을 정의한 바 있다. 비슷하게, 게임1의 상태가 $A$, 게임2의 상태가 $B$일 때 player가 취할 수 있는 행동이 다음 중 하나라고 하자.\n게임1에서 한 턴을 움직인다. (즉, $A \\leftarrow a$ for some $a \\in A$) 게임2에서 한 턴을 움직인다. (즉, $B \\leftarrow b$ for some $b \\in B$) 게임1, 2에서 모두 움직일 수 없는 사람이 패배한다. (즉, $(\\emptyset,\\emptyset)$이 losing state) 이때, 새로운 게임의 state를 $A + B$로 표기한다. $A+B$의 구성은 역시 다음과 같다:\n$ A + B = \\set{(a, B) \\mid a \\in A } \\cup \\set{ (A,b) \\mid b \\in B }$\n그리고 PS에서 흔히 Sprague-Grundy Theorem이라고 불리는, 우리가 제일 좋아하는 정리는 다음과 같다.\nTheorem 4. $G(A+B) = G(A) \\oplus G(B)$.\n이 정리를 증명한다면 Question 3에 대한 답은 자연스레 따라온다. 증명에 필요한 Lemma를 먼저 보고 가자.\n$ x \\in \\nonneg$와 $A \\subset \\nonneg$에 대해 $x \\oplus A = \\set{x \\oplus a \\ \\mid \\ a \\in A}$로 정의하자.\nLemma 5. $A, B \\subset \\nonneg$에 대해, $C = (\\mex(A) \\oplus B) \\cup (A \\oplus \\mex(B))$로 정의하자. $\\mex(C) = \\mex(A) \\oplus \\mex(B)$ 이다.\nProof. 가장 먼저 $u := \\mex(A) \\oplus \\mex(B)$가 $C$에 속하지 않음을 보이자. $u \\in C$라면 $u \\in \\mex(A) \\oplus B$ 또는 $u \\in A \\oplus \\mex(B)$가 성립하는데, 각각 $\\mex(B) \\in B$와 $\\mex(A) \\in A$가 유도되어 모순. $\\blacksquare$\n이제 모든 $x \u0026lt; u$에 대해 $x \\in C$임을 보이자.\n$z = x \\oplus u$를 정의하자. $x \\neq u$이므로 $z \\neq 0$이고, $z$의 maximal bit $k$가 잘 정의된다. $z=10110_{2}$라면 $k=2^{4}$이다. 이 때 $\\oplus$의 정의에 따라 $k$는 $x$나 $u$ 중 정확히 하나에만 포함되어 있다.\n만약 $k$가 $x$에 포함되어 있다면 $x \u0026lt; u$이므로, $k \\le (x\\text{의 maximal bit}) \\le (u\\text{의 maximal bit})$가 성립하고, 등호조건 2개가 동시에 성립하지 않는다. 즉, $k \u0026lt; (u\\text{의 maximal bit})$가 성립한다. 그렇다면 $(x\\text{의 maximal bit}) \u0026gt; k$ 또는 $(x\\text{의 maximal bit}) \u0026lt; (u\\text{의 maximal bit})$ 중 하나가 성립해야 하는데, 각 경우에서 모순을 보일 수 있다.\n$k \u0026lt; (x\\text{의 maximal bit})$: $k$의 정의상 $k$보다 큰 비트는 $x, u$에 모두 포함되어 있어야 하고, $k$는 $x$에만 포함되어 있으므로 $x \u0026gt; u$가 되어 모순이다. $(x\\text{의 maximal bit}) \u0026lt; (u\\text{의 maximal bit})$: 이 경우 $u$의 maximalㄴ bit가 $z$에 포함되므로 $k$의 최대성에 모순이다. 따라서 $k$는 $u$에만 포함되어 있다. $u = \\mex(A) \\oplus \\mex(B)$이므로, $\\mex(A)$와 $\\mex(B)$ 중 하나만 $k$를 포함한다. 일반성을 잃지 않고 $\\mex(A)$가 $k$를 포함한다고 하자. 그렇다면 $x \\oplus \\mex(B)$는 $k$를 포함하지 않는다. 이 때 $x \\oplus \\mex(B) \u0026lt; \\mex(A)$가 성립함을 보이자.\n만약 $x \\oplus \\mex(B) \u0026gt; \\mex(A)$라면 $x \\oplus \\mex(B)$에는 포함되지만 $\\mex(A)$에 포함되지 않는 가장 큰 비트 $l$이 존재한다. 이 때 $z$의 최대 비트가 $l$이 되어야 하므로 $k$의 정의에 모순. $\\blacksquare$\n이렇게 Lemma 5의 증명이 끝난다. 이를 바탕으로 Theorem 4를 보이자. 역시 $\\mathcal{T}(A+B)$에 대한 strong induction이다.\n$\\mathcal{T}(A+B) = 0$인 경우는 $(A,B) = (\\emptyset,\\emptyset)$ 뿐이므로 성립. $a \\in A$에 대해 귀납가설로부터 $G(a+B) = G(a) \\oplus G(B)$이고, 마찬가지로 $b \\in B$에 대해 $G(A + b) = G(A) \\oplus G(b)$이다. 이 때 $S_{A}$를 $\\set{G(a) \\mid a \\in A}$라고 한다면 $G(a+B)=G(a) \\oplus \\mex(S_{B})$, $G(A + b) = \\mex(S_{A}) \\oplus G(b)$가 성립한다. $G(A+B) = \\mex( (S_{A} \\oplus \\mex(S_{B})) \\cup (\\mex(S_{A}) \\oplus S_{B}) )$ 임을 확인할 수 있고, Theorem 4에 따라 $G(A+B) = \\mex(S_{A}) \\oplus \\mex(S_{B}) = G(A) \\oplus G(B)$가 된다. $\\blacksquare$ Further Reading 사실 Sprague-Grundy theorem의 수학적 statement에서는 두 state의 equivalence relation $\\approx$를 정의한다. 이를 바탕으로 $A \\approx \\ast(G(A))$임을 보인다. Wikipedia를 참고. PS에 적용하기엔 딱히 merit가 없어 다루지 않았다. Nimber에도 algebra를 줄 수 있다. 게임의 덧셈과 비슷하게 nimber의 덧셈을 정의하면 $\\ast(a) + \\ast(b) = \\ast(a \\oplus b)$가 된다. 비슷하게 곱셈까지 정의해서 field가 되게 만들 수 있는데 어디 쓸 수 있는지 감도 안 온다;; 알게 되면 블로그에 추가할 예정. 다음 글에는 Grundy number와 관련된 몇 가지 예제와 연습문제를 들고 올 생각이다.\n","permalink":"https://tamref.github.io/posts/migrated/grundy-number-1/","summary":"Grundy Number는 PS에서 굉장히 자주 쓰이는 데 비해 그 증명이나 수학적 배경이 잘 알려져 있지 않다. 앞으로 일련의 포스팅에서는 Sprague-Grundy Theorem에 대해 공부한 것을 PS 스타일로 정리하려 한다. 그 중에서 이 글은 Grundy Number의 정의와 Sprague-Grundy theorem의 증명에 대해 다룬다.\nNim-Game의 필승 전략에 대한 사전 지식이 필요하며, 문제풀이에 최적화된 글이기 때문에 statement가 실제 theorem의 내용과는 다소 차이가 있다.\nReferences sirkingnightingfail, “A Blog on Sprague-Grundy Theorem”\nWikipedia: Sprague-Grundy theorem\nDefinition of Game “게임”은 상당히 광범위한 용어이지만, Sprague-Grundy theorem의 영향 아래 있는 “Game”은 다음의 조건을 만족하는 일종의 state collection을 말한다.","title":"Grundy Number 1"},{"content":"Permutation $\\pi : [n] \\to [n]$에 대해 Displacement를 $D(\\pi) = \\sum_{i=1}^{n} \\lvert i - \\pi (i) \\rvert$로 정의한다. 주어진 양수 $k$에 대해, $D(\\pi) = 2k$를 만족하는 짝순열의 개수를 $E_{k}$, 홀순열의 개수를 $O_{k}$라 두면 $E_{k} - O_{k} = (-1)^{k}\\binom{n-1}{k}$임을 보여라.\nOfficial Solution (짝순열) - (홀순열) 꼴로 표현되는 counting 문제에 적용될 수 있는 굉장히 강한 도구라고 생각한다.\n$a_{ij} = x^{\\lvert i - j \\rvert}$라고 두고, 행렬 $A = (a_{ij})$를 생각하자. 이 때 $\\displaystyle\\det A = \\sum_{\\pi} \\mathrm{sgn}(\\pi) a_{1,\\pi(1)} \\cdots a_{n,\\pi(n)} = \\sum_{\\pi} \\mathrm{sgn}(\\pi)x^{D(\\pi)}$로 표현된다. 이것만으로 문제의 80%는 풀린 셈이다.\n문제가 너무 작위적인 건지, 아니면 이 툴이 진짜 강력한 건지는 잘 모르겠다. 근데 조합론을 더 보려면 알아둘 필요는 있는 것 같다.\n이제 행렬 $A$의 determinant를 아무 방법으로 구하면 된다. 편의상 $A_{n}$이라고 부르자. Official solution에서는 $(n-1)$번째 row에 $x$를 곱해서 $n$번째 row에서 뺐더니 $(n,n)$에 $1 - x^2$, 나머지 $(n-1)\\times(n-1)$ matrix에 $A_{n-1}$이 나왔다고 한다. 따라서 귀납적으로 $\\det A_{n} = (1-x^{2})^{n-1}$이다. 그래서 $x^{2k}$의 계수는 $(-1)^{k}\\binom{n-1}{k}$가 된다. 끝. $\\square$\n","permalink":"https://tamref.github.io/posts/migrated/kaist-pow-202009/","summary":"\u003cp\u003ePermutation $\\pi : [n] \\to [n]$에 대해 Displacement를 $D(\\pi) = \\sum_{i=1}^{n} \\lvert i - \\pi (i) \\rvert$로 정의한다. 주어진 양수 $k$에 대해, $D(\\pi) = 2k$를 만족하는 짝순열의 개수를 $E_{k}$, 홀순열의 개수를 $O_{k}$라 두면 $E_{k} - O_{k} = (-1)^{k}\\binom{n-1}{k}$임을 보여라.\u003c/p\u003e","title":"Kaist Pow 202009"},{"content":"$[n] = \\set{1, \\cdots, n}$과 $2 \\le 2k \\le n$에 대해, Kneser graph $\\mar{KG}(n, k)$는 $\\binom{[n]}{k}$를 정점 집합으로 하고, $S \\cap S\u0026rsquo; = \\emptyset$인 모든 $S, S\u0026rsquo;$에 대해 간선을 이어준 그래프로 정의된다. Lovasz-Kneser Theorem (Kneser\u0026rsquo;s conjecture)란 이 그래프의 chromatic number $\\chi(\\mar{KG}(n, k)) \\ge n - 2k + 2$가 성립한다는 정리이다. 이 글에서는 Tucker\u0026rsquo;s lemma를 이용한 J. Matousek의 증명을 소개한다.\nTucker’s lemma Tucker’s lemma는 Borsuk-Ulam theorem의 이산적인 버전으로 생각할 수 있다. 자세한 대응 관계를 보이는 것은 간단하지 않으므로, statement를 우선 받아들이기로 하자.\nLemma (Tucker). $n$-차원 ball $B^{n}$의 triangulation $T$의 정점들이 그 경계인 $\\partial B^{n} = S^{n-1}$에서 antipodally symmetric이라고 하자. 즉, $v \\in S^{n-1}$에 $T$의 정점이 있으면 $-v$에도 정점이 있다. 이 때, $\\lambda : V(T) \\to \\set{\\pm 1, \\pm 2, \\cdots, \\pm n}$이 모든 $v \\in S^{n-1}$에 대해 $\\lambda(-v) = -\\lambda (v)$를 만족하면, $\\lambda(u) + \\lambda(v) = 0$인 $uv \\in E(T)$가 존재한다.\nLemma의 증명 역시 생략한다.\nKneser’s conjecture 귀류법으로, coloring $c$가 존재하여 $\\mar{KG}(n, k)$를 $n - 2k + 1$가지 색으로 칠한다고 하자. 이 색을 $2k, \\cdots, n$과 같이 번호를 매긴다. 이제 적당한 $B^{n}$의 triangulation $T$를 잡아서 Tucker’s lemma로 귀결시켜보자.\n정점이 $\\set{\\maf{0}, \\pm \\maf{e}_{1}, \\cdots, \\pm\\maf{e}_{n}}$으로 주어진 $B^{n}$ (정확히는 “정팔면체”)의 자연스러운 triangulation $K$를 생각해 보자. 이 때, $L = K \\setminus \\set{\\maf{0}}$에 대해, barycentric subdivision $L’$을 생각하자. 이제 여기서 다시 $\\maf{0}$을 집어넣고 모든 simplex를 이어주면 (즉, $\\maf{0}$에 대한 cone을 만들어주면) simplex $K’$을 얻을 수 있다.\n여담으로, $K$의 refinement로 triangulation이 주어지는 경우, Tucker’s lemma의 pure combinatorial proof가 알려져 있다. 언젠가 시간이 나면 적을 예정 아무튼 $K’$은 자명히 antipodally symmetric이다. 이제 $x \\in V(K’)$을 $n$차원 벡터로 보았을 때, $[n]$의 서로소인 부분집합 $x^{+}, x^{-}$를 다음과 같이 정의할 수 있다. $ x^{+} := \\set{i \\in [n] \\mid x_{i} \u0026gt; 0}, \\quad x^{-} := \\set{i \\in [n] \\mid x_{i} \u0026lt; 0} $ 이 때, $V(K’)$의 labeling $\\lambda$를 정의하자. 집합들의 total order $\\le$를 $\\sz{A} \u0026lt; \\sz{B}$이면 $A \u0026lt; B$가 성립하고, 크기가 같은 경우에는 아무 tie-breaker (사전순 등)를 주어서 정의한다.\n$\\sz{x^{+}} + \\sz{x^{-}} \\le 2k-2$인 경우 $ \\lambda(x) := \\begin{cases} \\sz{x^{+}} + \\sz{x^{-}} + 1 \u0026amp; x^{+} \\ge x^{-} \\ -(\\sz{x^{+}} + \\sz{x^{-}} + 1) \u0026amp; x^{+} \u0026lt; x^{-} \\end{cases} $ 이 경우 $\\sz{\\lambda(x)} \\le 2k - 1$이다.\n$\\sz{x^{+}} + \\sz{x^{-}} \\ge 2k - 1$인 경우 둘 중 (정의한 order $\\le$에 따라) 큰 집합 $x^{big}$의 크기가 $k$ 이상임에 주목하자. 이 때 $x^{big}$의 가장 작은 $k$개 원소로 이루어진 집합을 $A$라고 할 때, $ \\lambda(x) := \\begin{cases} c(A) \u0026amp; x^{+} \u0026gt; x^{-} \\ -c(A) \u0026amp; x^{+} \u0026lt; x^{-}\\end{cases} $ 로 정의한다. 이 경우 $\\sz{\\lambda(x)} \\ge 2k$이다.\n$\\lambda(-v) = -\\lambda(v)$를 보장하는 것만 중요하기 때문에 tie-breaker를 아무렇게나 주어도 된다. $x^{+} = x^{-}$인 경우는 둘 모두 공집합인 $x = \\maf{0}$뿐임을 생각하자. 실제로 Tucker’s lemma가 요구하는 것보다 강한 조건인, 모든 $v \\in V(K’)$에 대해 $\\lambda(-v) = -\\lambda(v)$가 성립한다.\nTucker’s lemma를 적용하면, $\\lambda(v) + \\lambda(w) = 0$인 $vw \\in E(K’)$이 존재한다. $E(K’)$의 구조를 생각해보면, $\\maf{0}$이 한 끝점이거나 $L’$의 한 면의 barycentric subdivision에 속한다. 두 경우 모두 $v^{\\pm} = (v^{+}, v^{-}), w^{\\pm} = (w^{+}, w^{-})$에 inclusion order를 줬을 때 $v^{\\pm} \u0026lt; w^{\\pm}$ 또는 $v^{\\pm} \u0026gt; w^{\\pm}$이 성립해야 한다는 사실을 알 수 있다.\n$\\sz{\\lambda(v)}, \\sz{\\lambda(w)} \\le 2k - 1$일 수 없다는 것이 이제 자명하다. $v^{\\pm} \u0026lt; w^{\\pm}$이라고 하면 $\\sz{v^{+}} + \\sz{v^{-}} \u0026lt; \\sz{w^{+}} + \\sz{w^{-}}$이기 때문. 따라서 $\\sz{\\lambda(v)} \\ge 2k$이다. 편의상 $\\lambda(v) = -\\lambda(w) \u0026gt; 0$이라고 가정하자. 이 경우 $v^{+} \\cap w^{-} = \\emptyset$이고, 따라서 $c(A) = \\lambda(v) = -\\lambda(w) = c(B)$를 만족하는 크기 $k$인 두 집합 $A \\subseteq v^{+}, B \\subseteq w^{-}$는 서로소이다. 즉 $\\mar{KG}(n, k)$에서 $A, B$는 같은 색을 갖는 연결된 간선으로, $c$가 coloring임에 모순이다. 증명 끝. ","permalink":"https://tamref.github.io/posts/migrated/lovasz-kneser/","summary":"\u003cp\u003e$[n] = \\set{1, \\cdots, n}$과 $2 \\le 2k \\le n$에 대해, Kneser graph $\\mar{KG}(n, k)$는 $\\binom{[n]}{k}$를 정점 집합으로 하고, $S \\cap S\u0026rsquo; = \\emptyset$인 모든 $S, S\u0026rsquo;$에 대해 간선을 이어준 그래프로 정의된다. Lovasz-Kneser Theorem (Kneser\u0026rsquo;s conjecture)란 이 그래프의 chromatic number $\\chi(\\mar{KG}(n, k)) \\ge n - 2k + 2$가 성립한다는 정리이다. 이 글에서는 Tucker\u0026rsquo;s lemma를 이용한 J. Matousek의 증명을 소개한다.\u003c/p\u003e","title":"Lovasz Kneser"},{"content":"Space-filling curve는 일반적으로 $I := [0,1]$에서 $I \\times I$로 가는 continuous onto function을 말한다. Hilbert’s curve, Sierpinski’s curve 등 여러 가지가 알려져 있다. 이런 curve들의 특징은 uniformly converge하는 연속함수열의 극한으로 정의된다는 점인데, 그렇지 않고는 Space Filling Curve를 만들기 굉장히 어렵기 때문이다. 이 포스팅에서는 $C^{1}$ class의 space-filling curve가 존재하지 않음을 보인다.\n$\\gamma : I \\to I^{2}$이 $C^{1}$ space-filling curve라고 가정해보자. 즉 $\\gamma$는 onto이고, $\\gamma’$이 연속이다.\n그렇다면 $\\mathrm{length}(\\gamma) = \\int_{0}^{1} \\lVert \\gamma’(t) \\rVert dt$는 finite한 값을 가져야 한다.\n하지만 $(i/n, j/n)$ 꼴로 주어진 $(n+1)^{2}$개의 점을 생각해 보자. $\\gamma$는 이 점들도 모두 지나야 한다. 서로 다른 두 점들 사이의 거리는 $\\frac{1}{n}$이상이므로, $\\gamma$의 길이는 최소한 $\\frac{1}{n} \\cdot ((n+1)^{2} - 1) = n+2$ 이상이어야 한다. 당연히 $n$을 무한대로 보내면 이 길이는 무한히 커지고, $\\gamma$의 길이가 유한이라는 가정에 모순이 된다. $\\blacksquare$\n","permalink":"https://tamref.github.io/posts/migrated/non-existence-of-c1-space-filling-curve/","summary":"\u003cp\u003eSpace-filling curve는 일반적으로 $I := [0,1]$에서 $I \\times I$로 가는 continuous onto function을 말한다. Hilbert’s curve, Sierpinski’s curve 등 여러 가지가 알려져 있다. 이런 curve들의 특징은 uniformly converge하는 연속함수열의 극한으로 정의된다는 점인데, 그렇지 않고는 Space Filling Curve를 만들기 굉장히 어렵기 때문이다. 이 포스팅에서는 $C^{1}$ class의 space-filling curve가 존재하지 않음을 보인다.\u003c/p\u003e","title":"Non Existence of C1 Space Filling Curve"},{"content":"rkm0959, jhhope1이랑 진행한 문제풀이의 간략한 풀이. 스포일러에 주의하자.\nBOJ 15313. 정과프 해적단 $[l, r]$ 값이 없는 문제는 좌표압축 + 세그먼트 트리를 이용한 dp로 $O(n\\log n)$에 해결할 수 있다. 이 때 $l$이 증가할수록 조건을 만족하기 위해 필요한 최소의 $r$도 증가하므로 inchworm을 얹어주면 $O(n^{2}\\log n)$이 된다.\nBOJ 15504. 프로그래밍 대결 제일 실력이 높은 선수를 제외하고, 각 선수마다 \u0026lsquo;자신을 이기는 선수\u0026rsquo;를 정해주면 스패닝 트리가 유일하게 결정된다. 해당 작업을 mcmf로 모델링하면 $O(n^{4})$. 늘 그렇듯 플로우 문제에서 시간복잡도는 아무 의미 없다.\nBOJ 17101. Dynamic Centroid 트리 $T$에 리프가 하나 추가된 $T\u0026rsquo;$의 경우, 센트로이드는 변하지 않거나 최대 한 칸 움직인다. 움직인다면 어떤 서브트리 방향으로 움직일지를 정해주면 되는데, 결국 서브트리 사이즈를 dynamic하게 정해줄 필요를 느낀다. 오일러 투어와 펜윅 트리를 이용해서 구해주면 $O(n\\log n)$. 좋은 문제인듯.\nBOJ 10916. Xtreme GCD Sum 구해야 할 식은 결국 $\\sum_{g = 1}^{10^{6}} \\phi(g)\\prod_{i=1}^{n}\\left(\\lfloor \\frac{b_{i}}{g} \\rfloor - \\lfloor \\frac{a_{i} - 1}{g} \\rfloor\\right)$가 된다. 위 식이 바뀌는 지점은 많아야 $O(n\\sqrt{X})$개 있으므로, $\\phi(n)$합 테이블이랑 같이 들고다니면 $O(X\\log X + n\\sqrt{X})$가 된다.\nBOJ 17975. Strike Zone KOI 2014 금광으로 $O(n^{2}\\log n)$.\nBOJ 13518. 트리와 쿼리 9 트리에서 MO\u0026rsquo;s algorithm을 돌리는 문제이다. 길이 $2n$의 오일러 투어를 먼저 얻은 뒤, 정점 $v$가 탐색되는 시점을 $d[v]$, 정점 $v$에서 빠져나가는 시점을 $f[v]$라고 하자. 쿼리가 되는 경로 $u \\to v$를 두 가지로 나누어 생각해보자. 편의상 $d[u] \u0026lt; d[v]$를 가정한다.\n$\\text{lca}(u,v) = u$ 인 경우, $[d[u], d[v]]$의 구간을 생각하면 경로 위의 점들은 홀수 번, 경로 밖의 점들은 짝수 번 등장한다. $\\mathrm{lca}(u,v) = x$인 경우, $[f[u], d[v]]$의 구간을 생각하자. 그럼 $x$를 제외하고 경로 위의 점들은 홀수 번, 경로 밖의 점들은 짝수 번 등장한다. 유일하게 $x$는 등장하지 않으므로, $x$를 따로 처리해 주면 된다. 결국 어떤 수가 등장하는 횟수의 \u0026lsquo;기우성\u0026rsquo;이 중요하게 되고, XOR의 느낌으로 자료구조를 관리하는 MO\u0026rsquo;s algorithm 문제가 된다. 시간복잡도 $O(Q\\sqrt{N})$.\nBOJ 8452. 그래프와 쿼리 쿼리를 역순으로 생각하면 간선 추가 쿼리와 최단경로 쿼리가 있는 셈이 된다. 최단 경로 쿼리를 매번 BFS를 이용하여 구해주면 되는데, 나이브하게 구하면 $O(Q(V + E))$가 된다. 그런데 $u \\to v$ 간선이 추가될 때 $u$에서 나가는 간선들만 최단경로를 갱신해준다고 생각하자. unit graph라는 특성상 각 노드에 도달하는 최단경로 길이가 갱신되는 건 많아야 $V$번이므로, 이 노드가 BFS를 전파하는 건 $O(V \\cdot \\mathrm{odeg}(v))$번이 된다. 이를 모든 노드에 대해 합하면 $O(Q + VE)$.\nBOJ 16027. Global Warming 한 원소를 $d$만큼 증가시켰다면 그 뒤의 원소를 증가시키지 않을 이유가 없다. 그리고 $d = x$로 고르는 게 항상 유리하다. 따라서 각 $i$에 대해 $[i, n]$ 구간을 $x$만큼 들었을 때 LIS의 길이를 관리해주면 $O(n\\log n)$.\nBOJ 19568. 직사각형 약 팔기 (2). 귀여운 문제다.\n","permalink":"https://tamref.github.io/posts/migrated/ps_20200811/","summary":"rkm0959, jhhope1이랑 진행한 문제풀이의 간략한 풀이. 스포일러에 주의하자.\nBOJ 15313. 정과프 해적단 $[l, r]$ 값이 없는 문제는 좌표압축 + 세그먼트 트리를 이용한 dp로 $O(n\\log n)$에 해결할 수 있다. 이 때 $l$이 증가할수록 조건을 만족하기 위해 필요한 최소의 $r$도 증가하므로 inchworm을 얹어주면 $O(n^{2}\\log n)$이 된다.\nBOJ 15504. 프로그래밍 대결 제일 실력이 높은 선수를 제외하고, 각 선수마다 \u0026lsquo;자신을 이기는 선수\u0026rsquo;를 정해주면 스패닝 트리가 유일하게 결정된다. 해당 작업을 mcmf로 모델링하면 $O(n^{4})$. 늘 그렇듯 플로우 문제에서 시간복잡도는 아무 의미 없다.","title":"Ps-20200811"},{"content":"교육용으로 사용한 10문제의 풀이입니다. 용어가 원본 문제와 다를 수 있습니다.\nBAPC 2021 F. \u0026ldquo;Fair Play\u0026rdquo; $n$이 홀수인 경우는 당연히 불가능하고, 짝수인 경우 $(b, p)$를 std::pair 와 같은 방식으로 정렬한 것을 $(b_{1}, p_{1}), \\cdots, (b_{n}, p_{n})$이라고 둡시다. 이 때 유일하게 가능한 매칭 방법은 $(b_{1}, p_{1})$을 $(b_{n}, p_{n})$과, $(b_{2}, p_{2})$를 $(b_{n-1}, p_{n-1})$과 \u0026hellip; 매칭해주는 것입니다. 이렇게 해서 벡터합이 모두 균일하다면 possible, 그렇지 않다면 impossible 입니다.\nBAPC 2021 I \u0026ldquo;Implementation Irregularities\u0026rdquo; $s_{i}$가 증가하는 순서대로 원소들을 배열하고, $s_{i} = -1$인 원소들을 제외합시다. 이 때 답은 $\\max_{i} \\lceil \\frac{t_{1} + \\cdots + t_{i}}{s_{i}} \\rceil$가 됩니다.\n2021/2022 COCI Contest #2 B \u0026ldquo;Kutije\u0026rdquo; 한 순열 $p(1), \\cdots, p(n)$에 대해 $i$번 정점과 $p(i)$번 정점을 간선으로 이어주면, 이는 사이클 몇 개로 분할되는 그래프를 이룹니다. 결국 주어지는 쿼리는 $a, b$가 같은 연결컴포넌트에 있는지를 물어보는 것이고, 사전에 DFS, union-find를 통해 컴포넌트를 구해두면 쿼리당 $O(1)$에 해결할 수 있습니다.\nCERC 2015 K \u0026ldquo;Kernel Knights\u0026rdquo; Indegree가 0인 정점 $a$는 무조건 선택해야 하고, 따라서 $f_{a}$는 무조건 배제해야 합니다. 이제 전체 그래프에서 $a, f_{a}$를 제외한 뒤 같은 과정을 반복하면 최종적으로 아무 정점도 남지 않거나, cycle이 남게 됩니다. 그래프가 이분그래프이기 때문에 이는 짝수 길이 cycle이 되고, 이 중에서는 범위($[1, N]$ 혹은 $[N+1, 2N]$)가 같은 점들만 골라주면 됩니다.\n2020 Jakarta Regional J \u0026ldquo;Token Distance\u0026rdquo; 좀 더 쉬운 버전인, 어떤 구간 $[s, e]$를 정렬했을 때 $\\set{x, x + 1, \\cdots, x + e - s}$가 될 필요충분조건을 생각해 봅시다.\n구간 $[s, e]$의 최댓값 - 최솟값이 정확히 $e - s$이다. 구간 $[s, e]$에 중복 원소가 존재하지 않는다. 하지만 일반적으로 $\\set{x, x + g, \\cdots, x + g (e - s)}$를 이룰 조건은 위 두개만으론 불충분합니다. 이 때 다음이 성립합니다.\nProposition. 구간 $[s, e]$의 수를 $A_{s}, \\cdots, A_{e}$라고 하자. 다음 세 조건을 동시에 만족하는 것과, $\\set{A_{s}, \\cdots, A_{e}} = \\set{x, x + g, \\cdots, x + g(e-s)}$가 성립하는 것은 동치이다.\n$\\max(A_{s}, \\cdots, A_{e}) - \\min(A_{s}, \\cdots, A_{e}) = g(e-s)$. $A_{s}, \\cdots, A_{e}$중 중복되는 값이 존재하지 않는다. $\\gcd(A_{s} - A_{s+1}, A_{s+1} - A_{s+2}, \\cdots, A_{e-1} - A_{e}) = g$. $\\set{A_{s}, \\cdots, A_{e}} = \\set{x, \\cdots, x + g(e-s)}$가 성립하는 경우 $\\gcd$ 조건을 만족하게 됩니다. $\\gcd$는 $g$의 배수가 될 것이고, 정확히 $g$가 아니면 $A_{s} \\pm g$가 등장할 수 없기 때문입니다. 또한 $\\gcd$ 조건을 만족하는 수열은 모두 $\\set{x, \\cdots, x + g(e-s)}$의 재배열뿐입니다.\n위 세가지 조건은 모두 Segment Tree 등을 이용해 판별할 수 있고, 시간복잡도는 $O(N \\log N)$이 됩니다.\n2021/2022 COCI Contest #2 E \u0026ldquo;Osumnjičeni\u0026rdquo; 주어진 $i$에 대해서, 구간 $[L_{i}, R_{i}], \\cdots, [L_{j}, R_{j}]$가 서로소가 되는 $j$의 최댓값을 미리 구해두고, 이를 $p(i)$라고 합시다. $p(i)$는 two-pointer로 $O(N\\log N)$ 시간에 구할 수 있습니다.\n$p^{0}(i) = i, p^{k}(i) = p(p^{k-1}(i))$로 정의하면, $[s, e]$ 형태로 쿼리가 들어올 경우 답은 $p^{k}(s) \\ge e$를 만족하는 $k$의 최솟값이 됩니다. 이는 $p^{k}(i)$를 sparse table 등으로 구해두면 $O(N \\log N + Q \\log N)$ 시간에 해결할 수 있습니다.\nDMOPC \u0026lsquo;21 Contest #7 Problem 5, \u0026ldquo;King\u0026rsquo;s Commands\u0026rdquo; 보다 간단한 경우로 $\\deg(a, 0) + \\deg(a, 1) \\le 1$인 경우를 생각해 봅시다. 연결 컴포넌트의 개수는 Degree가 0인 정점 (lone vertex)의 수와 선분들의 연결 컴포넌트 개수의 합으로 나타낼 수 있습니다.\n만약 $\\deg(a, 0) + \\deg(a, 1) \\le 1$이라면, lone vertex의 수는 상수로 유지되는 것을 알 수 있습니다. 따라서 선분들의 컴포넌트 수를 최소화하는 데만 집중하면 됩니다.\n$(l, 0), (r, 1)$을 잇는 선분을 $[l, r]$로 표기합시다. (편의상 $l \\le r$을 가정합니다) 만약 $l\u0026rsquo; \\le l \\le r \\le r\u0026rsquo;$을 만족하는 $[l\u0026rsquo;, r\u0026rsquo;]$이 존재할 경우 $[l, r]$은 어떻게 놓아도 $[l\u0026rsquo;, r\u0026rsquo;]$과 이어지므로 신경쓰지 않아도 됩니다. 따라서 모든 선분들을 $l$ 순으로 정렬한 것을 $[l_{1}, r_{1}], \\cdots, [l_{n}, r_{n}]$이라고 두면 $r_{1} \u0026lt; r_{2} \u0026lt; \\cdots \u0026lt; r_{n}$을 가정할 수 있습니다. 마찬가지로 $l_{1} \u0026lt; l_{2} \u0026lt; \\cdots \u0026lt; l_{n}$ 또한 가정할 수 있습니다.\n만약 $r_{k} \\lt l_{k+1}$이라면 어떻게 하더라도 두 선분 $[l_{k}, r_{k}]$와 $[l_{k+1}, r_{k+1}]$을 이을 수 없고, $r_{k} \u0026gt; l_{k+1}$이라면 둘을 엇갈리게 놓아서 연결할 수 있습니다.\n이제 본 문제를 해결해 봅시다. 차수가 2인 경우에는 간선을 어떻게 배치하느냐에 따라 lone vertex의 수가 달라질 수 있습니다. 이 때 간선들을 bottom vertex에 따라 정렬하고, 연속한 간선들을 group $G_{1}, G_{2}, \\cdots, G_{k}$로 최대한 쪼갭시다. 이 때 모든 $1 \\le i \\lt k$에 대해 $G_{1}, \\cdots, G_{i}$의 top vertex 중 가장 오른쪽에 있는 것이 $G_{i+1}, \\cdots, G_{k}$의 top vertex 중 가장 왼쪽에 있는 것보다 작거나 같아야 합니다. 이 때 각 group의 간선들은 차수 2인 정점 없이, 모두 연결되도록 할 수 있습니다. group $G_{i}$까지 모두 연결되도록 했을 때, 어떤 정점 $x$가 존재하여 $G_{i}$의 간선과 $G_{i+1}$의 간선에 모두 연결된다고 합시다. 이 경우 $G_{1}, \\cdots, G_{i}$를 모두 뒤집어주면 컴포넌트의 개수는 최대 1 감소하는 반면, lone vertex의 수는 확실히 1 감소하여 답이 줄어들지 않습니다.\n즉, 답이 $k$인 간선 배치가 주어지면 답이 $k$ 이상이고 차수 2인 정점이 없는 배치를 만들 수 있으므로, 우리는 차수 2인 정점이 없는 배치 중 컴포넌트 갯수가 가장 적은 배치를 찾을 것입니다.\n어떤 점 $(a, 0), (a, 1)$에 연결된 간선이 2개라면, 두 간선이 연결된 점은 달라야 합니다. 모든 정점 $(a, \\ast)$의 차수가 $2$ 이하이므로, 이런 구조에서는 path와 cycle만이 존재합니다. 이 중에서 우리는 $v_{1} \\lt v_{2} \\lt \\cdots \u0026lt; v_{q}$를 차례로 잇는 simple increasing path들만을 먼저 생각합시다.\nSimple increasing path들로 분할하고 나면 문제가 한층 쉬워집니다. 이제 각 정점의 차수는 1 이하가 되고, 앞서 다룬 케이스에 따라 엇갈리게 Path들을 놓으면 됩니다. 다만 이 경우에, $l\u0026rsquo; \\le l \\le r \\le r\u0026rsquo;$을 만족하는 두 chain $[l\u0026rsquo;, r\u0026rsquo;]$, $[l, r]$에 대해 $[l, r]$을 그냥 버리면 안됩니다.\nSimple path가 아닌 path나 cycle의 경우, 사실상 simple path와 동등하게 생각할 수 있습니다. 상세한 증명은 원 editorial https://dmoj.ca/problem/dmopc21c7p5/editorial 을 참고하시기 바랍니다.\nKTH challenge 2015 H \u0026ldquo;The Addition Game\u0026rdquo; 길이 $n$의 수열 $a$가 주어지면, $\\pi + \\sigma = a \\pmod{n}$을 만족하는 $\\pi, \\sigma$를 찾아야 합니다. 이야기하기 쉽게, $a - \\pi$가 순열이 되는 $\\pi$를 찾는 문제로 생각합시다. 당연히 $a_{1} + \\cdots + a_{n} = 0 \\pmod{n}$이어야 해가 존재하고, 놀랍게도 이 조건만 만족하면 해가 존재합니다. 이 문제에는 잘 통하는 휴리스틱과 어려운 정해가 있습니다.\nHeuristic $a - \\pi$가 순열이 아니라면, $a - \\pi$에 두 번 이상 등장하는 수 $k$와 한 번도 등장하지 않는 수 $l$이 존재합니다. 이 때 $k = (a - \\pi)_{i}$를 만족하는 $i$와, $a_{i} - \\pi_{j} = l$을 만족하는 $j$를 잡고 $\\pi_{i}, \\pi_{j}$를 swap하면 $l$의 개수가 하나 늘어나고, $k$의 개수는 감소하거나 유지됩니다. 이 방법의 단점은 $m = a_{j} - \\pi_{j}$의 개수가 $0$개로 줄어들거나 $p = a_{j} - \\pi_{i}$의 개수가 늘어날 수 있다는 점인데, 적절히 구현하면 놀랍게도 만점을 받을 수 있습니다.\nDeterministic $a = \\mathbf{0}$이라고 생각합시다. 이 경우에는 $\\pi_{i} = i, \\sigma_{i} = -i$로 두면 됩니다. 이제 이 상태에서 $\\pi$에 적당한 swap을 통해 $a^{1} = (a_{1}, -a_{1}, 0, \\cdots, 0) = \\pi^{1} + \\sigma^{1}$을 만들고, 다시 $\\pi^{1}$을 적당히 재배열해서 $a^{2} = (a_{1}, a_{2}, -a_{1}-a_{2}, 0, \\cdots, 0) = \\pi^{2} + \\sigma^{2}$를 만드는 방식을 $n-1$번 반복할 수 있습니다. 각 단계에서 $\\sigma^{k} = a^{k} - \\pi^{k}$ 역시 순열이어야 합니다. 이렇게 과정을 분해하는 까닭은 값이 2개만 틀려 있을 때만 문제를 해결해도 충분하다는 것을 이야기하기 위함입니다.\n보다 일반적으로, $\\pi(i_{1}) + \\sigma(i_{1}) \\neq a(i_{1})$, $\\pi(i_{2}) + \\sigma(i_{2}) \\neq a(i_{2})$라고 하고, $i \\neq i_{1}, i_{2}$에 대해 $\\pi(i) + \\sigma(i) = a(i)$라고 합시다. 따라서 $\\pi(i_{1}) + \\pi(i_{2}) + \\sigma(i_{1}) + \\sigma(i_{2}) = a(i_{1}) + a(i_{2})$가 성립합니다.\n편의상 어떤 배열 $b$의 값 $b(i_{1})$ (혹은 $b(i_{2})$)와 다른 위치 $j \\neq i_{1}, i_{2}$의 값 $b(j)$를 swap하는 것을 $b(i_{1})$을 \u0026ldquo;넣고\u0026rdquo; $b(j)$를 \u0026ldquo;빼낸다\u0026quot;라고 표현하겠습니다.\n만약 $\\pi(i_{1}) + \\sigma(i_{\\ast}) = a(i_{1})$이 성립한다면 끝입니다. 그렇지 않다면 $\\pi(j_{1}) + \\sigma(i_{1}) = a(i_{1})$을 만족하는 $j_{1} \\neq i_{1}, i_{2}$이 유일하게 존재합니다. 따라서 $a(i_{1})$과 $\\sigma(i_{1})$을 넣고, $a(j_{1})$과 $\\sigma(j_{1})$을 빼냅시다. 이는 $\\pi(i_{1})$과 $\\pi(j_{1})$을 swap하는 것과 동치인 연산입니다.\n여전히 빠져나온 $\\pi$의 두 원소를 적당히 swap해서 조건을 만족하는 수열을 만들 수 없다면 이번에는 $a(j_{1}), \\sigma(i_{2})$를 넣어줍시다. $a(j_{1}), \\sigma(j_{1})$을 넣으려고 시도하면 결국 원래 넣었던 $a(i_{1})$이 빠져나올테니까요. 빠져나온 수를 $a(j_{2}), \\sigma(j_{2})$라고 둡시다. $a(i_{2})$는 넣지 않고 남겨둘 겁니다.\n결국 $k \\ge 3$번째 step에서는 $a(j_{k-1}), \\sigma(j_{k-2})$을 넣고, $a(j_{k}), \\sigma(j_{k})$를 빼내는 과정을 반복하게 됩니다. 이 과정이 무한히 반복될 수 없음을 보입시다. $\\pi(j_{1}), \\cdots, \\pi(j_{t})$는 모두 distinct하지만 $\\pi(j_{s}) = \\pi(j_{t+1})$을 만족하는 $s \\le t$가 존재할 것입니다.\n이 때 $t+1$번째 step에서 빠져나오는 인덱스가 바로 $j_{s}$가 되는데, $j_{s}$가 빠져나올 당시 대신 넣어준 수는 바로 $a(j_{s-1}), \\sigma(j_{s-2})$입니다. 따라서 관계식\n$ \\pi(i_{1}) + \\pi(i_{2}) + \\sigma(j_{t}) + \\sigma(j_{s-2}) = a(i_{2}) + a(j_{s-1}) $ 이 성립하게 됩니다. 한편 $s$번째 step에서\n$ \\pi(i_{1}) + \\pi(i_{2}) + \\sigma(j_{s-1}) + \\sigma(j_{s-2}) = a(i_{2}) + a(j_{s-1}) $\n이 성립하므로, $\\sigma(j_{s-1}) = \\sigma(j_{t})$가 됩니다. 이 때 $\\pi(j_{1}), \\cdots, \\pi(j_{t})$가 모두 distinct하고 $\\pi, \\sigma$는 모두 순열이므로 모순이 발생합니다. 따라서 step은 최대 $n-2$번 지속될 수 있고, 총 $O(n^2)$ 시간에 문제를 해결할 수 있습니다.\nCERC 2017 E \u0026ldquo;Embedding Enumeration\u0026rdquo; $D_{x}$를 $x$가 왼쪽 위 모서리에 위치할 때 $x$의 서브트리를 배치하는 방법의 수라고 합시다. 당연히 $x$의 차수는 $2$ 이하여야 하고, 모든 정점의 차수는 $3$ 이하여야 합니다.\n$x$가 리프인 경우는 $D_{x} = 1$이므로, $x$가 자식이 $1$개 또는 $2$개인 경우만 고려하면 됩니다.\n자식이 2개인 경우 $x$의 두 자식을 $h, v$라고 하고, 일반성을 잃지 않고 $h$가 오른쪽으로, $v$가 아래로 뻗는다고 합시다. $v$는 자식이 최대 1개여야 합니다. 자식이 있다면 그걸 $v_{0}$라고 두면, $h$와 $v_{0}$가 격자의 가장 왼쪽 칸을 채우게 됩니다. 이 때 아래 케이스를 이용해 처리해줍니다.\nImportant Subcase: \u0026ldquo;Two Heads Case\u0026rdquo; 어떤 두 정점 $a, b$가 격자의 왼쪽 칸을 메우고 있을 때, 두 정점의 서브트리를 배치하는 경우의 수를 생각해 봅시다. 편의상 $a$의 서브트리 크기 $s_{a}$가 $b$의 크기 $s_{b}$보다 작다고 합시다.\n그렇다면 $a$는 길이 $s_{a}$의 직선이어야만 합니다. 또한 $b$도 길이 $s_{a}$의 직선을 직속 서브트리로 가져야 합니다. 이 때 $b$의 $s_{a}$번째 자식을 $b\u0026rsquo;$이라고 두면, $D_{b\u0026rsquo;}$이 답이 됩니다.\n자식이 1개인 경우 만약 $x$의 서브트리가 직선이라면, 고려해줄 특이 케이스가 있습니다. 거꾸로 된 ㄷ자 모양으로 격자를 채우는 경우인데, DP의 특성상 $x$의 서브트리 크기가 홀수일 때만 $D_{x}$에 1을 더해주는 걸로 충분합니다.\n이외의 경우, $x$의 서브트리 중에서 자식이 둘인 깊이가 가장 작은 정점 $h$가 존재합니다. 역시 $h$에서 케이스 처리를 해주면 됩니다.\n시작부터 방향을 아래쪽으로 틀어 채우는 경우, $x$와 $h$의 깊이 차이가 2 이상이어야 합니다. $x$의 grandson을 $y$라고 두면, $D_{y}$를 더해줍니다. 이는 $x$에서 $h$의 grandparent 사이에 방향을 전환하는 모든 경우를 아우르고 있습니다.\n$h$의 부모 정점에서 방향을 아래쪽으로 트는 경우, $h$의 두 자식 $u, v$ 중 하나는 왼쪽의 빈 공간으로 보내야 합니다. 따라서 둘 중 하나는 크기가 작은 직선이어야 합니다. $u$를 보낸다고 하면 $D_{v}$가 답이 될 것입니다.\n$h$까지 방향을 틀지 않는 경우, $h$의 두 자식 $u, v$ 중 하나를 아래로 보냅니다. $v$를 보낸다고 할 때, $v$는 자식이 둘이어도 됩니다. 다만 두 자식 중 하나는 왼쪽의 빈 공간을 채워야 하므로, 크기가 작은 직선이어야 합니다. 왼쪽으로 보내지 않는 자식을 $v_{r}$이라고 할 때, $u, v_{r}$을 이용해 Two Head Case를 처리해 주면 됩니다.\n디테일을 다소 생략하였으나, 전체 케이스를 $O(N)$에 구현할 수 있습니다.\nJAG Summer Camp 2013 Day 4 J \u0026ldquo;Rotation Game\u0026rdquo; 우선 wild-card 문자 *가 없는 경우를 처리해봅시다. 만약 시작 문자열에 o가 있는 칸에 도착 문자열에는 .가 있다면 그 칸에 +, 반대로 시작 문자열에는 .가 있고 도착 문자열에는 o가 있다면 -를 적어줍시다. +와 -의 개수는 같다고 가정해도 됩니다.\n문제에서 가능한 변환들이 주는 의미는 결국 하나의 +를 한 열 움직이는 데 1번의 회전이 필요하다는 것입니다. 또, 한 번의 회전이면 + 한개를 다른 +들에 영향을 미치지 않고 이동시킬 수 있다는 의미이기도 합니다.\n이렇게 되면, 모든 +와 모든 -를 가장 거리가 가까운 것끼리 매칭시켜주고, 매칭된 +, - 사이 거리의 합이 최적해인 것처럼 보입니다. 이는 stack을 이용해 잉여 +, 잉여 -를 관리하면 $O(N)$에 매칭해줄 수 있습니다.\n하지만 몇 가지 예외 케이스가 있는데, 바로 +, -가 같은 열에 있는 경우, 또 아래와 같이 +-와 -+이 맞물려 있는 경우입니다.\n1 2 ..+-.. ..-+.. 첫 번째로 +-가 한 열에 맞물려 있는 경우, 단순히 같은 열의 +, -를 비용 0으로 이어주면 안됩니다. 하지만 이 열보다 왼쪽에 잉여 +가 존재할 경우 이 열의 -를 잉여 +에 매칭해 주고, 이 열의 +를 잉여 +로 남기면 됩니다. 잉여 -가 존재하는 경우도 마찬가지입니다. 따라서 이 열 왼쪽에 잉여 +, -가 존재하지 않는 경우에만 비용에 1을 더해줍니다.\n두 번째로 +-, -+이 맞물려 놓이는 경우, 회전 한 번으로 두 열을 모두 돌릴 수 있습니다. 이 역시도 왼쪽에 잉여 +, 잉여 -가 없는 경우에만 성립합니다. 따라서 +-, -+, \u0026hellip; 이 교대로 $k$번 반복될 경우, 비용에 $\\lceil k / 2 \\rceil$을 더해주면 됩니다.\nwild-card *가 있는 경우에도 이 풀이를 자연스럽게 확장할 수 있습니다. $D(i, j, u, d)$를 $i$번째 열까지 봤고, 잉여 +가 $j$개이며, ($j \u0026lt; 0$인 경우 잉여 -가 있는 것으로 봅니다) 직전 두 열이 각각 $u, d$인 경우 비용의 최솟값으로 두고 DP를 해결하면 됩니다.\n","permalink":"https://tamref.github.io/posts/migrated/ps_20220716/","summary":"교육용으로 사용한 10문제의 풀이입니다. 용어가 원본 문제와 다를 수 있습니다.\nBAPC 2021 F. \u0026ldquo;Fair Play\u0026rdquo; $n$이 홀수인 경우는 당연히 불가능하고, 짝수인 경우 $(b, p)$를 std::pair 와 같은 방식으로 정렬한 것을 $(b_{1}, p_{1}), \\cdots, (b_{n}, p_{n})$이라고 둡시다. 이 때 유일하게 가능한 매칭 방법은 $(b_{1}, p_{1})$을 $(b_{n}, p_{n})$과, $(b_{2}, p_{2})$를 $(b_{n-1}, p_{n-1})$과 \u0026hellip; 매칭해주는 것입니다. 이렇게 해서 벡터합이 모두 균일하다면 possible, 그렇지 않다면 impossible 입니다.\nBAPC 2021 I \u0026ldquo;Implementation Irregularities\u0026rdquo; $s_{i}$가 증가하는 순서대로 원소들을 배열하고, $s_{i} = -1$인 원소들을 제외합시다.","title":"Ps-20220716"},{"content":"Riemann Mapping은 $\\mathbb{C}$의 모든 simply connected proper subset $\\Omega$에 대해, Conformal map $f : \\mathbb{D} \\to \\Omega$가 존재한다는 매우 강력한 정리이다. 여기서는 짧고 아름다운 nonconstructive한 증명을 다룬다.\nRef: Stein \u0026amp; Shakarchi, Complex Analysis Ch.8\nMontel’s theorem 어떤 함수열 $\\ev{f_n}$이 수렴하는 부분수열 $\\ev{f_{n(k)}}$를 갖는다는 사실은 매우 유용하다. 물론 여기서 수렴은 모든 cpt subset에 대한 uniform convergence를 의미한다.\nArzela-Ascoli Theorem의 경우, 정의역이 cpt set인 연속함수들의 함수족 $\\mc{F}$가 uniformly bdd, equicontinuous면 위 성질을 만족한다는 것을 보장하고 있다. 하지만 이렇게 조건이 까다로우면 복소해석 하는 맛이 안 난다.\nTheorem (Montel). $\\mb{C}$의 open subset $\\Omega$에 대해, $\\mc{F} \\subseteq \\mc{H}(\\Omega)$ 가 $\\Omega$의 모든 cpt subset에 대해 uniformly bounded라면 $\\mc{F}$는 equicontinuous이고, 수렴하는 부분수열을 갖는다. (단, 함수열의 수렴값이 여전히 $\\mc{F}$의 원소임은 보장되지 않는다)\n증명은 Arzela-Ascoli랑 비슷하고 그래서 좀 길다. 생략.\nLemma를 하나 더 소개한다.\nLemma 1. $\\mb{C}$의 connected open subset $\\Omega$에 대해, $\\Omega$의 injective하고 holomorphic한 함수열 $\\ev{f_n}$이 $\\Omega$의 모든 cpt subset에 대해 $f \\in \\mc{H}(\\Omega)$로 uniformly converge한다고 하자. 이 때, $f$는 injective이거나 constant이다.\nProof. $f$가 nonconstant, noninjective라고 하자. 그렇다면 $z \\neq w \\in \\Omega$가 존재하여 $f(z) = f(w)$이다. 이제 $g_{n}(z) = f_{n}(z) - f_{n}(w)$, $g(z) = f(z) - f(w)$라고 하자. $g_{n}$은 여전히 injective holomorphic이다.\n$w$는 $g$의 zero가 되는데, $g$가 nonconstant니까 isolated zero이다. 따라서 $w$를 원점으로 하는 작은 원 $C$를 잡아서 $\\frac{1}{2\\pi i}\\int_{C} \\frac{g\u0026rsquo;(z)}{g(z)} = 1$이 되도록 할 수 있다. 그런데 $C$ 위에서 $g_{n} \\rightrightarrows g, g_{n}\u0026rsquo; \\rightrightarrows g\u0026rsquo;$이므로 $\\frac{g_{n}’}{g_{n}} \\rightrightarrows \\frac{g’}{g}$이다. 그런데 $g_{n}$은 injective라서 $\\frac{1}{2\\pi i}\\int_{C} \\frac{g_{n}’(z)}{g_{n}(z)} = 0$이고, 모순. $\\blacksquare$\nRiemann Mapping Theorem Conformal map은 holomorphic bijection을 의미한다. Dirichlet problem같은 미분방정식을 풀 때 conformal map의 존재성은 매우 중요하다; 어떤 conformal map $f : \\Omega \\to \\mb{D}$가 경계에서 continuous bijection으로 extend까지 되는 경우, 잘 알려진 해를 갖는 disk에서의 dirichlet problem을 그대로 $\\Omega$에 이식할 수 있다. 따라서 아무렇게나 $\\Omega$가 주어졌을 때 Conformal map $f : \\Omega \\to \\mb{D}$가 존재하는지는 중요한 문제가 된다.\n후자의 조건인 continuous bijection extension의 경우 $\\Omega$가 polygon인 경우 가능하다는 것이 잘 알려져 있으며 $\\partial \\Omega$가 smooth closed curve 또는 continuous curve의 경우에도 확장이 가능하다고 하..지만 일단 이건 어려우니까, 지금은 생각하지 않는다. 일단은 conformal map의 존재성을 보자.\n우선 $\\Omega = \\mb{C}$인 경우에는 불가능하다. $f(\\mb{C}) \\subseteq \\mb{D}$라는 사실 자체가 $f$가 bounded entire function이라는 것을 함의하므로 Liouville theorem에 막힌다. 따라서 $\\Omega$는 최소한 $\\mb{C}$의 proper open subset이다.\n또한, $f$는 당연히 연속함수이므로 disk의 simply connectivity를 보존해야 한다. 즉, 임의의 두 경로 사이에 homotopy가 존재하는, simply connected domain이어야 한다.\n아직까지 나온게 연속성 argument밖에 없는데, 여기서 벌써 정리가 나오기 때문에 복소해석학이 사기 학문이다.\nTheorem (Riemann). $\\mb{C}$의 proper open simply connected subset $\\Omega$와 고정된 한 점 $z_0 \\in \\Omega$에 대해, $F(z_0) = 0, F’(z_0) \u0026gt; 0$을 만족하는 conformal map $F$가 유일하게 존재한다.\n유일성의 경우 Schwarz lemma를 생각하면 그리 중요한 부분이 아니다. 따라서 conformal map의 존재성만 보이기로 하자.\n먼저 $\\Omega$를 적당한 $\\mb{D}$의 원점을 포함하는 부분집합으로 보내는 conformal map을 하나 만들자. 즉, 원점을 포함하는 disk의 subset인 경우만 생각할 것이다. $\\Omega$가 simply connected이므로 $\\log$를 정의하는 생각을 자연스레 해볼 수 있다. $\\Omega$가 proper subset임에 주목하여 $a \\notin \\Omega$를 잡고, $h(z) = \\log(z - a)$로 정의하자. 그렇다면 $h$는 holomorphic이고, $e^{h(z)} = z - a$이므로 injective이다. 또한 임의의 $z \\neq w$에 대해 $h(z) \\neq h(w) + 2\\pi i$가 성립해야 하며, exponential function이 연속이므로 $h(z_{n}) \\to h(w) + 2\\pi i$인 수열 $z_n \\in \\Omega$조차 잡을 수 없다. ($h(z_{n}) \\to h(w) + 2\\pi i \\implies a + e^{h(z_n)} = z_{n} \\to w$) 따라서 어떤 $w \\in \\Omega$에 대해 $H(z) = \\frac{1}{h(z) - h(w) - 2\\pi i}$는 bounded, injective ($h$가 injective이므로), holomorphic function이다. 따라서 $H : \\Omega \\to H(\\Omega)$는 conformal map이고, 적당한 linear transformation을 끼얹어서 $H$를 수정하면 $H(\\Omega)$가 disk의 subset이고 원점을 포함하게 할 수 있다. 이제 $\\Omega$가 원점을 포함하는 $\\mb{D}$의 open subset이라고 가정해도 좋다. 이제, $f(0) = 0$을 만족하는 모든 injective holomorphic map $f : \\Omega \\to \\mb{D}$의 class를 $\\mc{F}$라고 두면 자연히 $\\mc{F}$는 uniformly bounded이다. 더하여, $z = 0$ 근처에서 Cauchy integral formula를 생각하면 $\\abs{f’(0)}$이라는 양 또한 $f \\in \\mc{F}$에 대해 uniformly bounded이다. 따라서 Montel’s theorem에 의해, 모든 $\\mc{F}$의 수열은 수렴하는 부분수열을 갖는다. $s = \\sup_{f \\in \\mc{F}} \\abs{f’(0)} \u0026lt; \\infty$를 생각하고, $\\abs{f_{n}\u0026rsquo;(0)}$이 $s$로 수렴하는 수열 $\\ev{f_n}$을 잡으면, 수렴하는 부분수열 $\\ev{f_{n(k)}}$ 가 존재한다. 이 함수열은 모든 $\\Omega$의 cpt subset에 대해 $f \\in \\mc{H}(\\Omega)$로 수렴하는데, $f$는 $\\abs{f’(0)} = s \u0026gt; 1$ ($id_{\\Omega} \\in \\mc{F}$)이므로 nonconstant이다. 따라서 Lemma 1에 의해서 $f$는 injective holomorphic이고, $f(0) = 0$이다. 마지막으로 $f : \\Omega \\in \\overline{\\mb{D}}$이므로 $\\abs{f(z)} \\le 1$인데, $f$가 nonconstant이므로 maximum modulus principle에 의해 $\\abs{f(z)} \u0026lt; 1$이다. 따라서 $f \\in \\mc{F}$임또한 알 수 있다. 이제 이 $f$가 정말로 conformal map임을 보이자. $f$가 surjection임만 보이면 충분하다. 귀류법으로 $f$가 surjection이 아니라고 하고, $\\alpha \\in \\mb{D} \\setminus f(\\Omega)$라고 두자. 이제 Blaschke factor $\\psi_{\\alpha}$를 합성하면, $(\\psi_{\\alpha} \\circ f) (U)$는 원점을 포함하지 않는 simply connected set이다. 따라서 square root function $g(w) = e^{\\frac{1}{2}\\log w}$가 injective holomorphic function이 된다. 이제 $F = \\psi_{g(\\alpha)} \\circ g \\circ \\psi_{\\alpha} \\circ f$라고 두면 $F : \\Omega \\to \\mb{D}$가 되고, $F$ 또한 injective holomorphic이므로 $F \\in \\mc{F}$이다. 당연히 $F(0) = 0$이다. 한편, $f = \\psi_{\\alpha} \\circ (z \\mapsto z^{2}) \\circ \\psi_{\\alpha} \\circ F = \\Phi \\circ F$를 생각하자. 이 때, $\\Phi$의 구성요소들로부터 $\\Phi : \\mb{D} \\to \\mb{D}$로써 생각한다. ($F$의 surjectivity를 가정하지 않았음에 유의하자) $(z \\mapsto z^{2})$가 $\\mb{D}$에서 noninjective이므로, Schwarz lemma를 생각하면 $\\abs{\\Phi’(0)} \u0026lt; 1$이다. ($\\abs{\\Phi’(0)} \\le 1$의 등호조건은 $\\Phi$가 rotation인 것) 따라서 $s = \\abs{f’(0)} = \\abs{\\Phi’(0)} \\abs{F’(0)} \u0026lt; \\abs{F’(0)}$이고, $F \\in \\mc{F}$임을 생각하면 모순. 따라서 $f$가 holomorphic bijection임을 확인할 수 있다. Schwarz Lemma의 중요성을 다시 눈여겨볼 수 있다. $\\blacksquare$\n","permalink":"https://tamref.github.io/posts/migrated/riemann-mapping/","summary":"Riemann Mapping은 $\\mathbb{C}$의 모든 simply connected proper subset $\\Omega$에 대해, Conformal map $f : \\mathbb{D} \\to \\Omega$가 존재한다는 매우 강력한 정리이다. 여기서는 짧고 아름다운 nonconstructive한 증명을 다룬다.\nRef: Stein \u0026amp; Shakarchi, Complex Analysis Ch.8\nMontel’s theorem 어떤 함수열 $\\ev{f_n}$이 수렴하는 부분수열 $\\ev{f_{n(k)}}$를 갖는다는 사실은 매우 유용하다. 물론 여기서 수렴은 모든 cpt subset에 대한 uniform convergence를 의미한다.\nArzela-Ascoli Theorem의 경우, 정의역이 cpt set인 연속함수들의 함수족 $\\mc{F}$가 uniformly bdd, equicontinuous면 위 성질을 만족한다는 것을 보장하고 있다.","title":"Riemann Mapping"},{"content":"$\\mathbb{C}$의 open unit disk $\\mathbb{D}$에 대해, holomorphic function $f : \\mathbb{D} \\to \\mathbb{D}$를 생각하자. Schwarz Lemma는 이러한 $f$의 성질에 대한 Lemma이고, 이는 $\\mathbb{D}$의 Automorphism group을 characterize하는 데 큰 도움을 준다.\nLemma (Schwarz) $f : \\mb{D} \\to \\mb{D}$가 holomorphic이고, $f(0) = 0$을 만족한다고 하자. 다음 세 성질이 성립한다.\n$\\abs{f(z)} \\le \\abs{z}$. 만약 $z_0 \\neq 0$에 대해 $\\abs{f(z_0)} = \\abs{z_0}$가 성립한다면, $f$는 rotation. $\\abs{f’(0)} \\le 1$. 등호가 성립한다면 $f$는 rotation. 증명은 기초 복소해석을 공부했다면 크게 어렵지는 않다.\nProof.\n$f(0) = 0$이므로, $g(z) := f(z) / z$가 역시 $\\mb{D}$에서 holomorphic이다. 이 때 임의의 $ r \u0026lt; 1$에 대해, 반지름 $r$짜리 circle $C_{r}(0) = \\partial D_{r}(0)$를 생각하면 $ \\sup_{z \\in C_{r}(0)} \\abs{g(z)} = \\frac{1}{r}\\sup_{z \\in C_{r}(0)} \\abs{f(z)} \\le \\frac{1}{r} $ 이 성립한다. 이 때 $g$가 holomorphic이므로 Maximum Modulus Principle에 의해 $\\sup_{z \\in D_{r}(0)} \\abs{g(z)} \\le \\frac{1}{r}$이고, $r \\to 1^{+}$의 극한에서 $\\abs{g(z)} \\le 1\\implies \\abs{f(z)} \\le \\abs{z}$를 얻는다.\n만약 $\\abs{g(z_0)} = 1$을 만족하는 $z_0 \\neq 0$이 있다면 역시 Maximum Modulus principle에 의해 $g$는 constant function이어야 한다. $g(z) = g(z_0) = e^{i\\theta}$라고 두면, $f(z) = e^{i\\theta}z$는 rotation이 된다.\n$g(0) = f’(0)$임에 주목하자. 마찬가지로 $\\abs{g(0)} \\le 1$이어야 하고, $\\abs{g(0)} = 1$이라면 역시 $f$는 rotation이 된다. 증명 끝.\nApplications of Schwarz Lemma Definition. $\\mb{C}$의 open set $U, V$에 대해, $f : U \\to V$가 holomorphic이고 bijection이면 $f$를 conformal map이라고 한다. 특별히 $U = V$인 경우 $f$를 $U$의 automorphism이라고 한다.\n위 정의에서 $f^{-1} : V \\to U$가 holomorphic임은 보일 수 있다.\nProposition. $U$의 모든 automorphism을 모은 집합을 $\\mr{Aut}(U)$라고 하면, $(\\mr{Aut}(U), \\circ)$는 군을 이룬다.\nTheorem. $f \\in \\mr{Aut}(\\mb{D})$에 대해 $f(0) = 0$이라면 $f$는 rotation이다.\nProof. $f$에 대해 Schwarz lemma를 적용하면, $\\abs{f(z)} \\le \\abs{z}$가 성립한다. 반면 $f^{-1}$에 대해 Schwarz lemma를 적용하면, $\\abs{z} = \\abs{f^{-1}(f(z))} \\le \\abs{f(z)}$가 성립하여 $\\abs{f(z)} = \\abs{z}$가 되고, $f$는 rotation이어야 한다.\n이제 이 사실에 기반하여 $\\mr{Aut}(\\mb{D})$를 Characterize하자. 그 전에 다음과 같은 도구를 소개한다.\nDefinition. (Blaschke factor) $\\alpha \\in \\mb{D}$에 대해, $\\psi_{\\alpha} : \\mb{D} \\to \\mb{D}$는 $\\mr{Aut}(\\mb{D})$의 원소이며, $\\psi_{\\alpha}(0) = \\alpha, \\psi_{\\alpha}(\\alpha) = 0$이다. 그 식은 아래와 같고, 모든 성질을 아래 식으로부터 유도가능하다. $ \\psi_{\\alpha}(z) = \\frac{\\alpha - z}{1 - \\overline{\\alpha}z} $ 또 하나 주목할 만한 성질로, $\\psi_{\\alpha} \\circ \\psi_{\\alpha} = \\mr{id}_{\\mb{D}}$가 성립한다. 이것도 계산해보면 된다.\nTheorem. 모든 $\\mr{Aut}(\\mb{D})$의 원소는 $\\psi_{\\alpha}$와 rotation의 합성으로 표현할 수 있다.\n$f \\in \\mr{Aut}(\\mb{D})$를 생각하자. $g = \\psi_{f(0)} \\circ f$는 $g(0) = 0$을 만족하는 Automorphism이므로 rotation이고, 양쪽에 $\\psi_{f(0)}$를 합성하면 증명 끝.\n즉, 모든 $\\mr{Aut}(\\mb{D})$의 원소는 2개의 parameter $\\theta, \\alpha$에 대해 $ \\psi_{\\alpha}(z) = e^{i\\theta} \\frac{\\alpha - z}{1 - \\overline{\\alpha}z} $ 와 같이 쓸 수 있다.\nTheorem. $\\mr{Aut}(\\mb{D}) \\simeq \\mbf{SU}(1,1) / \\set{\\pm 1}$.\n$\\mbf{SU}(1, 1)$이란 $J = \\begin{pmatrix} 1 \u0026amp; 0 \\ 0 \u0026amp; -1\\end{pmatrix}$에 대해, $\\ev{\\mbf{z},\\mbf{w}} = \\mbf{z}^{\\dagger} J \\mbf{w}$와 같이 정의된 Hermitian form $\\ev{\\cdot,\\cdot} : \\mb{C}^{2} \\times \\mb{C}^{2} \\to \\mb{C}$ 을 보존하는 special matrix들의 집합을 말한다. 즉 모든 $\\mbf{z},\\mbf{w} \\in \\mb{C}^{2}$에 대해 $\\ev{M\\mbf{z}, M\\mbf{w}} = \\ev{z,w}$를 만족하는 $\\det(M) = 1$인 matrix들의 집합을 $\\mbf{SU}(1,1)$이라고 쓴다. 당연히 행렬곱에 대해 군 구조를 가진다.\n$J$ 자리에 $I$를 넣어서 만든 group은 $\\mbf{SU}(2)$라고 부른다.\n열심히 계산을 하면 $\\mbf{SU}(1,1)$의 모든 원소는 $\\abs{a}^{2} - \\abs{b}^{2} = 1$을 만족하는 $a, b \\in \\mb{C}$에 대해 $U_{a,b} = \\begin{pmatrix} a \u0026amp; b \\ \\overline{b} \u0026amp; \\overline{a} \\end{pmatrix}$의 꼴로 쓸 수 있다는 사실을 증명할 수 있다. 이 때 $a = ue^{i\\theta}, b = ve^{i\\phi}$라고 쓰면, $u^{2} - v^{2} = 1$이 성립한다. 이 때 $\\alpha = -b / a$에 대해, $\\varphi : U_{a,b} \\mapsto e^{2i\\theta}\\psi_{\\alpha}$는 two-to-one homomorphism이 된다. $U_{a,b}$에 의해 만들어지는 linear fractional map $z \\mapsto (az + b) / (\\overline{b} z + \\overline{a})$가 $e^{2i\\theta} \\psi_{\\alpha}$와 같고, 이 관계로부터 map이 group homomorphism임을 쉽게 보일 수 있다.\n따라서 $\\ker\\varphi = \\set{\\pm 1}$로부터 $\\mbf{PSU}(1,1) := \\mbf{SU}(1,1) / \\set{\\pm 1} \\simeq \\mr{Aut}(\\mb{D})$를 얻고, 추가적으로 $\\mb{Aut}(\\mb{D})$가 $\\mb{D} \\times S^{1}$의 기하적 구조를 가지므로 $\\mbf{PSU}(1,1) \\approx \\mb{D} \\times S^{1}$임도 알 수 있다.\n","permalink":"https://tamref.github.io/posts/migrated/schwarz-lemma/","summary":"$\\mathbb{C}$의 open unit disk $\\mathbb{D}$에 대해, holomorphic function $f : \\mathbb{D} \\to \\mathbb{D}$를 생각하자. Schwarz Lemma는 이러한 $f$의 성질에 대한 Lemma이고, 이는 $\\mathbb{D}$의 Automorphism group을 characterize하는 데 큰 도움을 준다.\nLemma (Schwarz) $f : \\mb{D} \\to \\mb{D}$가 holomorphic이고, $f(0) = 0$을 만족한다고 하자. 다음 세 성질이 성립한다.\n$\\abs{f(z)} \\le \\abs{z}$. 만약 $z_0 \\neq 0$에 대해 $\\abs{f(z_0)} = \\abs{z_0}$가 성립한다면, $f$는 rotation. $\\abs{f’(0)} \\le 1$. 등호가 성립한다면 $f$는 rotation. 증명은 기초 복소해석을 공부했다면 크게 어렵지는 않다.","title":"Schwarz Lemma"},{"content":"SEEMOUS 2019를 풀어보았다. 몇몇 문제는 풀이를 검증하기 위한 배경 지식이 부족해서 나중에 자세히 다루기로 한다.\nP1 $[0,1]$의 값을 갖는 무한 실수열 $\\set{x_{n}}$이 다음 조건을 만족하면 $\\set{x_{n}}$을 Devin sequence라고 한다.\n$ \\lim_{n \\to \\infty} \\frac{1}{n}\\sum_{i=1}^{n}f(x_{i}) = \\int_{0}^{1} f(x)dx $\n이 때, $\\set{x_{n}}$이 Devin sequence가 될 필요충분조건은\n$ \\forall k \\ge 0 \\quad \\lim_{n \\to \\infty} \\frac{1}{n}\\sum_{i=1}^{n}x_{i}^{k} = \\frac{1}{k+1} $\n인 것임을 보여라.\nSolution sketch $\\implies$는 자명.\n$\\impliedby$는 Weierstrass.\nP2 $A_{1}, A_{2}, \\cdots, A_{m} \\in \\mathfrak{M}_{n,n}(\\mathbb{R})$에 대하여 다음을 만족하는 $\\set{\\varepsilon_{i}} \\in \\set{-1,1}^{m}$이 존재함을 보여라.\n$ \\text{tr}\\left[ \\left(\\sum_{i=1}^{n} \\varepsilon_{i}A_{i}\\right)^{2} \\right] \\ge \\text{tr}[A_{1}^{2}] + \\cdots + \\text{tr}[A_{m}^{2}] $\nSolution 가능한 모든 $\\varepsilon_{i}$값에 대해서 좌변을 모두 더하면 $2^{n}\\left( \\text{tr}(A_{1}^{2}) + \\cdots +\\text{tr}(A_{n}^{2}) \\right)$가 되는 것을 확인할 수 있다. 당연히 평균 이상인 값이 존재하므로 OK. $\\square$\nP3 $A, B \\in \\mathfrak{M}_{n,n}(\\mathbb{C})$에 대해 $B^{2} = B$가 성립한다. 이 때 $\\text{rank}(AB-BA) \\le \\text{rank}(AB + BA)$가 성립함을 보여라.\nSolution $\\ker (B) = V$, $\\ker(I-B) = W$라고 하면 $F^{n} = V \\oplus W$가 성립한다. 따라서 $A = P + Q$ ($P \\in \\mathcal{L}(F^{n},V)$, $Q \\in \\mathcal{L}(F^{n},W)$ 꼴로 나타내자. 즉, $BP = 0, BQ = Q$가 된다.\n이 때 임의의 $x \\in F^{n}$은 $x = v + w$ ($v \\in V, w \\in W$)로 나타낼 수 있으므로\n$ (AB-BA)(v+w) = Aw-Q(v+w) = Pw - Qv $\n위 식에 의해 $\\text{im}(AB-BA) = P(W) \\oplus Q(V)$가 된다. 마찬가지로 $\\text{im}(AB + BA)= (P+2Q)(W) \\oplus Q(V)$가 된다. rank를 비교하기 위해서는 두 space의 dimension을 비교하면 된다.\n$P(\\mathcal{W})$가 $P(W)$의 기저가 되는 $\\mathcal{W} = \\set{w_{1},\\cdots,w_{l}} \\subset W$, 마찬가지로 $Q(\\mathcal{V})$가 $Q(V)$의 기저가 되는 $\\mathcal{V}=\\set{v_{1},\\cdots,v_{m}} \\subset V$가 존재한다. 이 때, $\\set{(P+2Q)(w_{1}), \\cdots, (P+2Q)(w_{l}), Q(v_{1}), \\cdots, Q(v_{m})}$이 linearly independent임을 보이자. 만약 실수 $c_{1}, \\cdots, c_{l}, d_{1}, \\cdots, d_{m}$에 대해\n$\\sum_{i=1}^{l} c_{i}(P+2Q)(w_{i}) + \\sum_{i=1}^{m}d_{i}Q(v_{i})=0$이라고 하자. 양변에 $I-B$를 곱하면 $\\sum_{i=1}^{l}c_{i}P(w_{i}) = 0$에서 $c_{i} = 0$이다. 따라서 $\\sum_{i=1}^{m} d_{i}Q(v_{i}) = 0$의 양변에 $B$를 곱하면 $d_{i}=0$이 유도되어 증명 끝. $\\square$\nP4 (a) $n \\ge 1$에 대해 $\\int_{0}^{1} x^{n-1}\\ln x dx$를 계산하라.\n(b) 다음의 값을 계산하라.\n$ \\sum_{n=1}^{\\infty} \\sum_{k=n+1}^{\\infty} \\frac{(-1)^{k+1}}{(k+1)^{2}} $\nSolution sketch (a)의 답은 $-\\frac{1}{n^2}$.\n(b)는 몇 가지 검증되지 않은 과정을 거치면 $\\ln 2$라는 답을 얻을 수 있다.\n","permalink":"https://tamref.github.io/posts/migrated/seemous-2019/","summary":"SEEMOUS 2019를 풀어보았다. 몇몇 문제는 풀이를 검증하기 위한 배경 지식이 부족해서 나중에 자세히 다루기로 한다.\nP1 $[0,1]$의 값을 갖는 무한 실수열 $\\set{x_{n}}$이 다음 조건을 만족하면 $\\set{x_{n}}$을 Devin sequence라고 한다.\n$ \\lim_{n \\to \\infty} \\frac{1}{n}\\sum_{i=1}^{n}f(x_{i}) = \\int_{0}^{1} f(x)dx $\n이 때, $\\set{x_{n}}$이 Devin sequence가 될 필요충분조건은\n$ \\forall k \\ge 0 \\quad \\lim_{n \\to \\infty} \\frac{1}{n}\\sum_{i=1}^{n}x_{i}^{k} = \\frac{1}{k+1} $\n인 것임을 보여라.\nSolution sketch $\\implies$는 자명.\n$\\impliedby$는 Weierstrass.\nP2 $A_{1}, A_{2}, \\cdots, A_{m} \\in \\mathfrak{M}_{n,n}(\\mathbb{R})$에 대하여 다음을 만족하는 $\\set{\\varepsilon_{i}} \\in \\set{-1,1}^{m}$이 존재함을 보여라.","title":"SEEMOUS 2019"},{"content":"SWERC 2019 H번 문제이다. BOJ 18300번이기도 하다.\nSolution 문제에 주어진 점화식이 수학적 의미가 거의 없다는 데 주목하자. $S_{i}$로부터 $S_{i-1}$을 알아내기도 쉽지 않고, 기우성을 분석하기도 쉽지 않다. 따라서 $S_{i}$를 “전부 미리 돌아보지” 않는 이상 접근이 어려울 것이라는 생각을 하게 된다.\n실제로 $\\set{S_{n}}$에는 어느 순간부터 $3 \\times 10^{8}$ 정도 크기의 사이클이 나타난다. 이 값은 $2^{63}$보다 훨씬 작고, 구해야 하는 값인 “$S_{0},\\cdots,S_{n-1}$ 중 짝수의 개수”는 적당히 $10^{7}$ 개씩 끊어서 DB에 저장해두면 어렵지 않게 구할 수 있다.\n사이클이 나타나는 순간을 찾는 게 문제인데, $3 \\times 10^{8}$이라는 주기도 매우 크기 때문에 값을 모두 저장해가며 구한다면 채점 서버는 물론, 로컬에서도 버티기 어렵다. pollard-rho algorithm에서 했던 것처럼 $S_{n} = S_{2n}$을 만족하는 $n$으로부터 사이클의 크기를 추론하면 된다.\n","permalink":"https://tamref.github.io/posts/migrated/swerc2019-h/","summary":"\u003cp\u003eSWERC 2019 H번 문제이다. \u003ca href=\"https://www.acmicpc.net/problem/18300\"\u003eBOJ 18300번\u003c/a\u003e이기도 하다.\u003c/p\u003e","title":"Swerc2019 H"},{"content":"SWERC 2019 J번 문제이다. BOJ 18302번이기도 하다.\n대회 중에는 rkm0959가 풀었다. 너무 긴 본문이 읽기 싫어서 알큼이 요약해준 문제 설명대로만 코드를 짰다가 중요한 디테일을 누락시켜서 엄청 고생했다…\n간단히 말해서, inorder traversal (LDR 순회)이 주어진 수열이 나올 수 있는 binary tree의 개수를 구하는 문제이다. 단, 이 tree는 min-heap의 조건 (자식 $\\ge$ 부모)를 만족해야 한다.\nSolution CP에서 보기 드문 적당한 난이도의 괜찮은 조합론 문제인 것 같다.\n크기 $n$의 unlabeled binary tree의 개수는 $n$-th Catalan number $C_{n}$개임이 알려져 있다. 일반성을 잃지 않고 노드에 적힌 값들을 $0, \\cdots, x$라고 해보자.\n우선 $0$이 적힌 노드 ($0$-노드)들이 루트를 포함하는 연결된 이진 트리를 이룸을 관찰할 수 있다. 이러한 이진 트리의 개수는 Catalan Number 개수가 되고, 각각의 경우에 대해 수열의 나머지 원소들이 어떤 $0$-노드의 서브트리로 들어가는지가 자동으로 결정된다. 따라서 $0$-노드들에 의해 분할된 수열에서 재귀적으로 문제를 풀면 된다.\n시간복잡도 $\\mathcal{O}(n \\log n)$을 유지하려면 구현이 좀 까다롭다. 수열의 원소들을 linked-list 형태로 저장하고, 같은 수가 적힌 두 노드가 다른 구간에 속하는지 판정하기 위해 구간 합 Segment Tree를 하나 유지해주면 된다.\n","permalink":"https://tamref.github.io/posts/migrated/swerc2019-j/","summary":"\u003cp\u003eSWERC 2019 J번 문제이다. \u003ca href=\"https://www.acmicpc.net/problem/18302\"\u003eBOJ 18302\u003c/a\u003e번이기도 하다.\u003c/p\u003e\n\u003cp\u003e대회 중에는 rkm0959가 풀었다. 너무 긴 본문이 읽기 싫어서 알큼이 요약해준 문제 설명대로만 코드를 짰다가 중요한 디테일을 누락시켜서 엄청 고생했다…\u003c/p\u003e\n\u003cp\u003e간단히 말해서, inorder traversal (LDR 순회)이 주어진 수열이 나올 수 있는 binary tree의 개수를 구하는 문제이다. 단, 이 tree는 min-heap의 조건 (자식 $\\ge$ 부모)를 만족해야 한다.\u003c/p\u003e","title":"Swerc2019 J"},{"content":"SWERC 2019 K번 문제이다. BOJ 18303번이기도 하다.\nrkm0959한테 문제 요약만 들어서 본문을 잘 모른다(…)\nUnweighted Directed graph에서 어떤 고정된 정점 $T$에 대해 $u \\to T$ 간선이 있고, 이 간선을 사용하지 않으면 $u$에서 $T$로 이동할 수 없는 정점 $u$를 모두 구하는 문제이다. 정점 개수와 간선 개수는 $10^{5}$개 이하.\nSolution 뇌정지가 오기 쉬운 문제같다. 풀이도 말로 하기가 어려운듯…\n일단 모든 간선의 방향을 뒤집어서 생각하면 시작점이 $T$로 고정된다. 기본적인 세팅.\n한 가지 관찰은 $T \\to u$ 간선이 $T$에서 $u$로 가는 가장 짧은 경로라는 것이고, 이 간선을 사용하지 않는 경로는 모두 길이가 그보다 strict하게 길다는 것이다.\n이제 $T$에서 나가는 간선을 모두 제거하자. $T$에 인접한 모든 $u$들을 시작점으로 하는 multi-source dijkstra 알고리즘을 돌리되, 서로 다른 시작점에서 온 최단 경로 2개를 유지한다. 그냥 BFS로 되는 것 같기도 한데 확신이 없어서 heap 다익스트라를 썼다.\n이 때 시작점으로 쓴 $u$들 중 2번째 최단경로가 없는 점들이 우리가 원하는 조건을 만족한다.\n","permalink":"https://tamref.github.io/posts/migrated/swerc2019-k/","summary":"\u003cp\u003eSWERC 2019 K번 문제이다. \u003ca href=\"https://www.acmicpc.net/problem/18303\"\u003eBOJ 18303\u003c/a\u003e번이기도 하다.\u003c/p\u003e\n\u003cp\u003erkm0959한테 문제 요약만 들어서 본문을 잘 모른다(…)\u003c/p\u003e\n\u003cp\u003eUnweighted Directed graph에서 어떤 고정된 정점 $T$에 대해 $u \\to T$ 간선이 있고, 이 간선을 사용하지 않으면 $u$에서 $T$로 이동할 수 없는 정점 $u$를 모두 구하는 문제이다. 정점 개수와 간선 개수는 $10^{5}$개 이하.\u003c/p\u003e","title":"Swerc2019 K"},{"content":"평면 위에 다음을 만족하는 점열 $\\set{P_n}_{n \\in \\mathbb{Z}}$이 존재함을 보여라:\n“$P_{a}, P_{b}, P_{c}$가 공선점인 것은 $a + b + c = 2014$와 동치이다.”\n답을 알고 푸는 것과 모르고 푸는 게 차이가 큰 문제라고 생각한다. 풀이를 생각한 과정을 적당히 적어두려고 한다.\n일단 $2014$는 year constant이긴 하지만, 어떤 의미가 있는지 모르겠으니 $a = a’ + 677$ 정도로 바꾸자. 그럼 이제 $a + b + c = 1$인 경우로 바꾸면 된다.\n$P_{a} = (f(a), g(a))$로 두자. 신발끈 공식에 의해 세 점 $P_{a}, P_{b}, P_{c}$가 공선점인 것은 $Q(a, b, c) = \\sum_{cyc} f(a)g(b) - f(b)g(a) = 0$ 과 동치이다. 당장 얻어낼 수 있는 정보가 너무 없으니, $f, g$가 모두 “다항식”이라는 희망적인 가정을 해보자.\n일단 $Q(a, b, c)$의 근을 생각해보면 항상 $a = b, b = c, c = a$를 근으로 가지는 데다 $(a + b + c - 1)$도 근으로 가진다. 그래서 최소한 $(a-b)(b-c)(c-a)(a + b + c - 1)$을 근으로 가져야 한다. 그런데 이걸 계산해보면 $\\sum_{cyc} a(b^3 - b^2) - b(a^3 - a^2)$로 정리가 되어서 나온다. alternating polynomial이기 때문에 $a^{2}b^{2}$이나 $a^{2}bc$, $abc$같은 항이 나오지 않기 때문이다. 고차식이었다면 위험할 뻔했다…\n그래서 그냥 $(a, a^{3} - a^{2})$가 답이고, 눈치챌 수 있듯이 $(a, a^{3} - 2014a^{2})$가 원본 문제의 답이 된다.\n","permalink":"https://tamref.github.io/posts/migrated/usamo-2014-p3/","summary":"\u003cp\u003e평면 위에 다음을 만족하는 점열 $\\set{P_n}_{n \\in \\mathbb{Z}}$이 존재함을 보여라:\u003c/p\u003e\n\u003cp\u003e“$P_{a}, P_{b}, P_{c}$가 공선점인 것은 $a + b + c = 2014$와 동치이다.”\u003c/p\u003e","title":"Usamo 2014 P3"},{"content":"$\\newcommand{\\abs}[1]{\\lvert #1 \\rvert}$\nVector space $W$의 subspace $U,V$에 대해 다음의 결과는 잘 알려져 있다. $ \\dim (U + V) = \\dim U + \\dim V - \\dim (U \\cap V) $ 오늘은 이 결과를 증명하고, 이 정리의 확장과 관련된 유명한 반례를 소개한다.\n단, $U + V = \\set{u + v : u \\in U, v \\in V}$로 정의한다. $U, V \\le W$에 대해 $U \\cap V, U + V \\le W$는 자명.\nBasis Extension Theorem 원래 이름은 Steinitz Exchange lemma라고 하지만, 익숙한 이름으로 부르자.\n$V$의 linearly independent subset $S$에 대해, $S$를 포함하는 $V$의 기저 $B$가 존재한다.\nProof. $\\left\u0026lt;S\\right\u0026gt; = V$라면 $S$는 그 자체로 $V$의 기저이다. (단, $\\left\u0026lt;S\\right\u0026gt;$는 $S$의 span)\n그렇지 않다면 $v \\in V - \\left\u0026lt;S\\right\u0026gt;$가 존재하고, $S\u0026rsquo; = S \\cup \\set{v}$ 또한 linearly independent subset임이 자명하다.\n$V$가 finite-dimensional vector space라면 $S$의 크기가 $\\dim V$ 이하임이 보장되므로 이것으로 증명이 끝난다.\nfinite-dimension이 아닌 경우에도 Zorn’s lemma에 의해 역시 증명이 끝난다…고 알고 있다.\nProof of the theorem $U \\cap V$의 subset $C$가 그 기저라고 하자. Basis Extension theorem에 의해 $C$를 포함하는 $U$의 기저 $B$, $V$의 기저 $D$가 존재한다.이 때 $\\left\u0026lt;C \\cup D\\right\u0026gt; = \\left\u0026lt;C\\right\u0026gt; + \\left\u0026lt;D\\right\u0026gt; = U + V$이고, $C \\cap D = B$이므로 $C \\cup D$는 linearly independent하다. 따라서 $\\dim(U + V) = \\abs{C \\cup D} = \\abs{C} + \\abs{D} - \\abs{C \\cap D}$ . $\\square$\n이는 다시 말해서, $U \\cup V$의 기저는 $U$의 기저와 $V$의 기저를 union해서 만들 수 있다는 것을 말한다.\ncf) 이 증명은 Basis Extension Theorem에 의존하므로, $U , V$가 finite dimensional이 아니라면 역시 Zorn’s lemma가 필요하다.\n$n = 3$ generalization: Breakdown 그렇다면 욕심을 좀 내어, 다음의 정리가 성립하지 않을까?\n$W_{1}, W_{2}, W_{3} \\le V$에 대해,\n$\\dim(W_{1} + W_{2} + W_{3})= \\sum_{i=1}^{3}\\dim W_{i} - \\sum_{1 \\le i \u0026lt; j \\le 3} \\dim(W_{i} \\cap W_{j}) + \\dim(W_{1} \\cap W_{2} \\cap W_{3})$\n안타깝게도 이 정리는 성립하지 않는다. $\\mathbb{R}^{2}$에서 원점을 지나는 직선을 3개 잡으면 반례가 된다.\n이 실패를 몇 가지 관점에서 조명해볼 수 있는데, 실제로 성립하는 한 가지 사실을 보자.\n$\\dim (W_{1} + W_{2} + W_{3}) = \\sum_{i=1}^{3} \\dim W_{i} - \\dim (W_{1} \\cap (W_{2} + W_{3}))$\n여기서 $W_{1} \\cap (W_{2} + W_{3}) = (W_{1} \\cap W_{2}) + (W_{1} \\cap W_{3})$이 아니다. dimension도 당연히 일반적으로 같지 않다. 역시 $\\mathbb{R}^{2}$에서 원점을 지나는 3개의 직선이 반례가 된다.\n$n = 2$인 경우와 유사하게 $W_{1} \\cap W_{2} \\cap W_{3}$의 기저로부터 $ W_{i} \\cap W_{j}$의 기저를 만들고, 또 $W_{i}$의 기저를 만드는 방법을 생각할 수 있는데, 그렇게 만든 $W_{i}$의 기저를 $B_{i}$라고 하자. 이 때, $B_{1} \\cup B_{2} \\cup B_{3}$는 당연히 $W_{1} + W_{2} + W_{3}$를 span하지만 linear independency가 보장되지 않음을 알 수 있다. 다르게 말해, 다음의 부등식은 여전히 성립한다.\n$\\dim(W_{1} + W_{2} + W_{3}) \\le \\sum_{i=1}^{3}\\dim W_{i} - \\sum_{1 \\le i \u0026lt; j \\le 3} \\dim(W_{i} \\cap W_{j}) + \\dim(W_{1} \\cap W_{2} \\cap W_{3})$\n","permalink":"https://tamref.github.io/posts/migrated/vector-space-sum/","summary":"$\\newcommand{\\abs}[1]{\\lvert #1 \\rvert}$\nVector space $W$의 subspace $U,V$에 대해 다음의 결과는 잘 알려져 있다. $ \\dim (U + V) = \\dim U + \\dim V - \\dim (U \\cap V) $ 오늘은 이 결과를 증명하고, 이 정리의 확장과 관련된 유명한 반례를 소개한다.\n단, $U + V = \\set{u + v : u \\in U, v \\in V}$로 정의한다. $U, V \\le W$에 대해 $U \\cap V, U + V \\le W$는 자명.","title":"Vector Space Sum"}]